{"version":3,"file":"lazy-line-painter-2.0.0.min.js","mappings":"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","sources":["webpack://lazy-line-painter/webpack/universalModuleDefinition","webpack://lazy-line-painter/webpack/bootstrap","webpack://lazy-line-painter/webpack/runtime/define property getters","webpack://lazy-line-painter/webpack/runtime/hasOwnProperty shorthand","webpack://lazy-line-painter/webpack/runtime/make namespace object","webpack://lazy-line-painter/./src/events.js","webpack://lazy-line-painter/./src/easing.js","webpack://lazy-line-painter/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lazy-line-painter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lazy-line-painter\"] = factory();\n\telse\n\t\troot[\"lazy-line-painter\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","let EventEmitter = {};\n\nEventEmitter.on = function (name, callback) {\n  this._eventEmitterCallbacks = this._eventEmitterCallbacks || {};\n  this._eventEmitterCallbacks[name] = this._eventEmitterCallbacks[name] || [];\n  this._eventEmitterCallbacks[name].push(callback);\n};\nEventEmitter.addListener = EventEmitter.on;\n\nEventEmitter.off = function (name, callback) {\n  this._eventEmitterCallbacks = this._eventEmitterCallbacks || {};\n  if (!(name in this._eventEmitterCallbacks)) return;\n  const i = this._eventEmitterCallbacks[name].indexOf(callback);\n\n  if (i < 0) return;\n  this._eventEmitterCallbacks[name].splice(i, 1);\n};\nEventEmitter.removeListener = EventEmitter.off;\n\nEventEmitter.emit = function (name, evt) {\n  this._eventEmitterCallbacks = this._eventEmitterCallbacks || {};\n  if (!(name in this._eventEmitterCallbacks)) return;\n  for (let callback of this._eventEmitterCallbacks[name]) {\n    if (typeof callback !== 'function') return;\n    callback(evt);\n  }\n};\nEventEmitter.trigger = EventEmitter.emit;\n\nexport default EventEmitter;\n","\nlet Easing = {\n\n  easeLinear(n) {\n    return n;\n  },\n\n  easeInQuad(n) {\n    return n * n;\n  },\n\n  easeOutQuad(n) {\n    return n * (2 - n);\n  },\n\n  easeInOutQuad(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n;\n    return -0.5 * (--n * (n - 2) - 1);\n  },\n\n  easeInCubic(n) {\n    return n * n * n;\n  },\n\n  easeOutCubic(n) {\n    return --n * n * n + 1;\n  },\n\n  easeInOutCubic(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n * n;\n    return 0.5 * ((n -= 2) * n * n + 2);\n  },\n\n  easeInQuart(n) {\n    return n * n * n * n;\n  },\n\n  easeOutQuart(n) {\n    return 1 - --n * n * n * n;\n  },\n\n  easeInOutQuart(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n * n * n;\n    return -0.5 * ((n -= 2) * n * n * n - 2);\n  },\n\n  easeInQuint(n) {\n    return n * n * n * n * n;\n  },\n\n  easeOutQuint(n) {\n    return --n * n * n * n * n + 1;\n  },\n\n  easeInOutQuint(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n * n * n * n;\n    return 0.5 * ((n -= 2) * n * n * n * n + 2);\n  },\n\n  easeInSine(n) {\n    return 1 - Math.cos(n * Math.PI / 2);\n  },\n\n  easeOutSine(n) {\n    return Math.sin(n * Math.PI / 2);\n  },\n\n  easeInOutSine(n) {\n    return 0.5 * (1 - Math.cos(Math.PI * n));\n  },\n\n  easeInExpo(n) {\n    return n === 0 ? 0 : Math.pow(1024, n - 1);\n  },\n\n  easeOutExpo(n) {\n    return n === 1 ? n : 1 - Math.pow(2, -10 * n);\n  },\n\n  easeInOutExpo(n) {\n    if (n === 0) return 0;\n    if (n === 1) return 1;\n    if ((n *= 2) < 1) return 0.5 * Math.pow(1024, n - 1);\n    return 0.5 * (-Math.pow(2, -10 * (n - 1)) + 2);\n  },\n\n  easeInCirc(n) {\n    return 1 - Math.sqrt(1 - n * n);\n  },\n\n  easeOutCirc(n) {\n    return Math.sqrt(1 - --n * n);\n  },\n\n  easeInOutCirc(n) {\n    n *= 2;\n    if (n < 1) return -0.5 * (Math.sqrt(1 - n * n) - 1);\n    return 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1);\n  },\n\n  easeInBounce(n) {\n    return 1 - this.easeOutBounce(1 - n);\n  },\n\n  easeOutBounce(n) {\n    if (n < 1 / 2.75) {\n      return 7.5625 * n * n;\n    } else if (n < 2 / 2.75) {\n      return 7.5625 * (n -= 1.5 / 2.75) * n + 0.75;\n    } else if (n < 2.5 / 2.75) {\n      return 7.5625 * (n -= 2.25 / 2.75) * n + 0.9375;\n    }\n    return 7.5625 * (n -= 2.625 / 2.75) * n + 0.984375;\n\n  },\n\n  easeInOutBounce(n) {\n    if (n < 0.5) return this.easeInBounce(n * 2) * 0.5;\n    return this.easeOutBounce(n * 2 - 1) * 0.5 + 0.5;\n  }\n};\n\nexport default Easing;\n\n","/*\n * Lazy Line Painter\n * SVG Stroke animation.\n *\n * https://github.com/merri-ment/lazy-line-painter\n * http://www.merriment.info\n *\n * Copyright 2013-2023 Merriment\n * All rights reserved.\n *\n * Licensed under the MIT license.\n *\n */\n\nimport Events from './events';\nimport Easing from './easing';\n\nclass LazyLinePainter {\n  /**\n   * init\n   * Responsible for caching user options,\n   * @public\n   * @param  {object} opts user defined options\n   */\n\n  constructor(el, config) {\n    this.el = el;\n    this.el.classList.add('lazy-line-painter');\n\n    this.config = Object.assign(\n      {\n        strokeWidth: null,\n        strokeDash: null,\n        strokeColor: null,\n        strokeOverColor: null,\n        strokeCap: null,\n        strokeJoin: null,\n        strokeOpacity: null,\n\n        delay: 0,\n        ease: null,\n        drawSequential: false,\n        speedMultiplier: 1,\n        reverse: false,\n        paused: false,\n        progress: 0,\n        repeat: 0,\n\n        longestDuration: 0,\n        log: true,\n        offset: this.el.getBoundingClientRect()\n      },\n      config,\n      {}\n    );\n\n    Object.assign(this, Events, {});\n\n    this.__raf = null;\n    this.__paths = [];\n\n    this._generatePaths();\n    this._parseDataAttrs();\n    this._updateDuration();\n    this._setupPaths();\n\n    document.addEventListener('visibilitychange', this._onVisibilityChange);\n  }\n\n  _generatePaths() {\n    let paths;\n\n    let composed = Boolean(this.el.dataset.llpComposed);\n\n    if (composed) {\n      paths = this.el.querySelectorAll('[data-llp-id]');\n    } else {\n      paths = this._uncomposed();\n    }\n\n    for (let i = 0; i < paths.length; i++) {\n      let path = {\n        el: paths[i]\n      };\n\n      this.__paths.push(path);\n    }\n  }\n\n  _uncomposed() {\n    let paths = this.el.querySelectorAll(\n      'path, polygon, circle, ellipse, polyline, line, rect'\n    );\n\n    let i;\n\n    for (i = 0; i < paths.length; i++) {\n      let id = this.el.id.replace(/ /g, '');\n\n      id = id.replace('.', '');\n      id = id.replace('-', '');\n      paths[i].dataset.llpId = id + '-' + i;\n\n      if (!paths[i].dataset.llpDuration) {\n        paths[i].dataset.llpDuration = 1000;\n      }\n      if (!paths[i].dataset.llpDuration) {\n        paths[i].dataset.llpDelay = 0;\n      }\n    }\n\n    if (this.config.log) {\n      console.log(\n        'This lazy line is uncomposed! Visit https://lazylinepainter.com to compose your masterpiece!'\n      );\n    }\n\n    return paths;\n  }\n\n  /**\n   * paint\n   * Responsible for drawing path.\n   * @public\n   */\n\n  paint(config) {\n    // update playback arguments\n    Object.assign(this.config, config);\n    this._updateDuration();\n\n    this.erase();\n\n    // begin animation\n    this._paint();\n\n    // fire start callback\n    this.emit('start');\n  }\n\n  /**\n   * pause\n   * Responsible for pausing path animation.\n   * @public\n   */\n  pause() {\n    if (this.config) {\n      this.config.paused = true;\n    }\n    cancelAnimationFrame(this.__raf);\n    this.emit('pause');\n  }\n\n  /**\n   * resume\n   * Responsible for resuming path animation.\n   * @public\n   */\n  resume() {\n    if (this.config && this.config.paused) {\n      requestAnimationFrame(() => {\n        this.adjustStartTime();\n      });\n      this.config.paused = false;\n      this.emit('resume');\n    }\n  }\n\n  /**\n   * erase\n   * Responsible for clearing path,\n   * paint can still be called on the element after it has been erased.\n   * @public\n   */\n  erase() {\n    // reset / cancel rAF\n    this.config.startTime = null;\n    this.config.elapsedTime = null;\n    cancelAnimationFrame(this.__raf);\n\n    // reset callback\n    this.config.onStrokeCompleteDone = false;\n\n    // reset paused\n    this.config.paused = false;\n\n    // empty contents of svg\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      path.el.style.strokeDashoffset = path.length;\n      path.onStrokeCompleteDone = false;\n      path.onStrokeStartDone = false;\n    }\n\n    this.emit('erase');\n  }\n\n  /**\n   * destroy\n   * Responsible for removing lazyline data and element from DOM\n   * @public\n   */\n  destroy() {\n    // retrieve / remove data object\n    this.config = null;\n\n    // empty container element\n    this.el.remove();\n    this.el = null;\n  }\n\n  /**\n   * set\n   * @public\n   */\n  set(prop, value) {\n    switch (prop) {\n      case 'progress':\n        this._setProgress(value);\n        break;\n      case 'delay':\n        this._setDelay(value);\n        break;\n      case 'reverse':\n        this._setReverse(value);\n        break;\n      case 'ease':\n        this._setEase(value);\n        break;\n      case 'repeat':\n        this._setRepeat(value);\n        break;\n      default:\n        if (this.config.log) {\n          console.log('property ' + prop + ' can not be set');\n        }\n    }\n  }\n\n  _setRepeat(repeat) {\n    this.config.repeat = repeat;\n  }\n\n  _setEase(ease) {\n    this.config.ease = ease;\n  }\n\n  _setProgress(progress) {\n    this.pause();\n    this.config.progress = this._getProgress(progress, this.config.ease);\n    this._updatePaths();\n    this.config.elapsedTime = this.config.progress * this.config.totalDuration;\n  }\n\n  _setDelay(delay) {\n    this.config.delay = delay;\n    this._updateDuration();\n  }\n\n  _setReverse(reverse) {\n    this.config.reverse = reverse;\n    this._updateDuration();\n  }\n\n  _updateDuration() {\n    let totalDuration = this._getTotalDuration();\n\n    let longestDuration = this._getLongestDuration();\n\n    this.config.totalDuration = this.config.drawSequential ?\n      totalDuration :\n      longestDuration;\n    this.config.totalDuration += this.config.delay;\n\n    this._calcPathDurations();\n  }\n\n  _calcPathDurations() {\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      let startTime;\n\n      path.progress = 0;\n\n      if (this.config.reverse) {\n        if (this.config.drawSequential) {\n          startTime = 0;\n        } else {\n          startTime = this.config.totalDuration - (path.delay + path.duration);\n        }\n      } else {\n        if (this.config.drawSequential) {\n          startTime = 0;\n        } else {\n          startTime = this.config.delay + path.delay;\n        }\n      }\n\n      path.startTime = startTime;\n      path.startProgress = path.startTime / this.config.totalDuration;\n      path.durationProgress = path.duration / this.config.totalDuration;\n    }\n  }\n\n  /**\n   * get\n   * @public\n   */\n  get() {\n    return this.config;\n  }\n\n  /**\n   * resize\n   * @public\n   */\n  resize() {\n    this.config.offset = this.el.getBoundingClientRect();\n    // this.config.scale = this.config.offset.width / this.config.width;\n\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      path.el.getBoundingClientRect();\n      path.positions = this._getPathPoints(path.el, path.length);\n      this._updatePosition(path);\n    }\n  }\n\n  _parseDataAttrs() {\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      path.id = path.el.dataset.llpId;\n      path.delay = Number(path.el.dataset.llpDelay) || 0;\n      path.duration = Number(path.el.dataset.llpDuration) || 0;\n      path.reverse = Boolean(path.el.dataset.llpReverse) || false;\n      path.ease = Number(path.el.dataset.llpEase) || null;\n      path.strokeDash = path.el.dataset.llpStrokeDash || null;\n      path.delay *= this.config.speedMultiplier;\n      path.duration *= this.config.speedMultiplier;\n\n      this._setStyleAttrs(path);\n    }\n  }\n\n  _setStyleAttrs(path) {\n    path.strokeColor =\n      path.el.dataset.llpStrokeColor || this.config.strokeColor;\n    if (path.strokeColor) {\n      path.el.style.stroke = path.strokeColor;\n    }\n\n    path.strokeOpacity =\n      path.el.dataset.llpStrokeOpacity || this.config.strokeOpacity;\n    if (path.strokeOpacity) {\n      path.el.style.strokeOpacity = path.strokeOpacity;\n    }\n\n    path.strokeWidth =\n      path.el.dataset.llpStrokeWidth || this.config.strokeWidth;\n    if (path.strokeWidth) {\n      path.el.style.strokeWidth = path.strokeWidth;\n    }\n\n    path.strokeCap = path.el.dataset.llpStrokeCap || this.config.strokeCap;\n    if (path.strokeCap) {\n      path.el.style.strokeLinecap = path.strokeCap;\n    }\n\n    path.strokeJoin = path.el.dataset.llpStrokeJoin || this.config.strokeJoin;\n    if (path.strokeJoin) {\n      path.el.style.strokeLinejoin = path.strokeJoin;\n    }\n  }\n\n  _setupPaths() {\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      path.index = i;\n      path.length = this._getPathLength(path.el);\n      path.positions = this._getPathPoints(path.el, path.length);\n\n      path.el.style.strokeDasharray = this._getStrokeDashArray(\n        path,\n        path.length\n      );\n      path.el.style.strokeDashoffset = path.length;\n\n      path.onStrokeStartDone = false;\n      path.onStrokeCompleteDone = false;\n    }\n  }\n\n  /**\n   * adjustStartTime\n   * Responsible for managing time.\n   * @private\n   * @param  {number} timestamp identifies current time\n   * @param  {object} data      contains options set on init() and paint()\n   */\n  adjustStartTime() {\n    let timestamp = performance.now();\n\n    this.config.startTime = timestamp - this.config.elapsedTime;\n    requestAnimationFrame(() => {\n      this._paint();\n    });\n  }\n\n  /**\n   * _paint\n   * Responsible for animating paths.\n   * Path incrementation is performed using requestAnimationFrame.\n   * @private\n   * @param  {number} timestamp   identifies current time\n   * @param  {object} data        contains options set on init() and paint()\n   */\n  _paint() {\n    if (!this.config) {\n      return;\n    }\n\n    // set startTime\n    if (!this.config.startTime) {\n      this.config.startTime = performance.now(); // new Date()\n    }\n\n    this.emit('update');\n\n    // set elapsedTime\n    let timestamp = performance.now();\n\n    this.config.elapsedTime = timestamp - this.config.startTime;\n    this.config.linearProgress =\n      this.config.elapsedTime / this.config.totalDuration;\n\n    this.config.progress = this._getProgress(\n      this.config.linearProgress,\n      this.config.ease\n    );\n    // console.log(this.config.elapsedTime, ' ', this.config.totalDuration);\n\n    this._updatePaths();\n\n    if (this.config.linearProgress >= 0 && this.config.linearProgress <= 1) {\n      this.__raf = requestAnimationFrame(() => {\n        this._paint();\n      });\n    } else {\n      if (this.config.repeat > 0) {\n        this.config.repeat--;\n        this.paint();\n      } else if (this.config.repeat === -1) {\n        this.paint();\n      } else {\n        this.emit('complete');\n      }\n    }\n  }\n\n  _updatePaths() {\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      let pathProgress = this._getElapsedProgress(path);\n\n      path.progress = this._getProgress(pathProgress, path.ease);\n      this._setLine(path);\n      this._updatePosition(path);\n      this._updateStrokeCallbacks(path);\n    }\n  }\n\n  _getElapsedProgress(path) {\n    let elapsedProgress;\n\n    if (\n      this.config.progress >= path.startProgress &&\n      this.config.progress <= path.startProgress + path.durationProgress\n    ) {\n      elapsedProgress =\n        (this.config.progress - path.startProgress) / path.durationProgress;\n    } else if (\n      this.config.progress >=\n      path.startProgress + path.durationProgress\n    ) {\n      elapsedProgress = 1;\n    } else if (this.config.progress <= path.startProgress) {\n      elapsedProgress = 0;\n    }\n\n    return elapsedProgress;\n  }\n\n  _getProgress(linearProgress, ease) {\n    let progress = linearProgress;\n\n    if (ease) {\n      progress = Easing[ease](linearProgress);\n    }\n    return progress;\n  }\n\n  _setLine(path) {\n    let el = path.el;\n\n    let length = path.progress * path.length;\n\n    if (path.reverse) {\n      el.style.strokeDashoffset = -path.length + length;\n    } else if (this.config.reverse) {\n      el.style.strokeDashoffset = -path.length + length;\n    } else {\n      el.style.strokeDashoffset = path.length - length;\n    }\n  }\n\n  _updateStrokeCallbacks(path) {\n    if (path.progress === 1) {\n      if (!path.onStrokeCompleteDone) {\n        path.onStrokeCompleteDone = true;\n\n        this.emit('complete:' + path.id, path);\n        this.emit('complete:all', path);\n      }\n    } else if (path.progress > 0.00001) {\n      if (!path.onStrokeStartDone) {\n        this.emit('start:' + path.id, path);\n        this.emit('start:all', path);\n        path.onStrokeStartDone = true;\n      }\n\n      this.emit('update:' + path.id, path);\n      this.emit('update:all', path);\n    }\n  }\n\n  /**\n   * _updatePosition\n   * Responsible for updating the paths x / y position.\n   * @private\n   */\n  _updatePosition(path) {\n    let index = Math.round(path.progress * (path.length - 1));\n\n    let position = path.positions[index];\n\n    if (position) {\n      path.position = {\n        x: this.config.offset.left + position.x,\n        y: this.config.offset.top + position.y\n      };\n    }\n  }\n\n  _getTotalDuration() {\n    let totalDuration = 0;\n\n    let paths = this.__paths;\n\n    for (let i = 0; i < paths.length; i++) {\n      let pathDelay = paths[i].delay || 0;\n\n      totalDuration += paths[i].duration + pathDelay;\n    }\n\n    return totalDuration;\n  }\n\n  _getLongestDuration() {\n    let longestDuration = 0;\n\n    let paths = this.__paths;\n\n    for (let i = 0; i < paths.length; i++) {\n      let pathTotalDuration = paths[i].delay + paths[i].duration;\n\n      if (pathTotalDuration > longestDuration) {\n        longestDuration = pathTotalDuration;\n      }\n    }\n\n    return longestDuration;\n  }\n\n  /**\n   * _getPathLength\n   * Responsible for returning a svg path length.\n   * @return {number} path length\n   */\n  _getPathLength(el) {\n    return this._getTotalLength(el); // el.getTotalLength());\n  }\n\n  _getDistance(p1, p2) {\n    return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n  }\n\n  _getCircleLength(el) {\n    return Math.PI * 2 * el.getAttribute('r');\n  }\n\n  _getEllipseLength(el) {\n    let rx = parseInt(el.getAttribute('rx'), 1);\n\n    let ry = parseInt(el.getAttribute('ry'), 1);\n\n    let h = Math.pow(rx - ry, 2) / Math.pow(rx + ry, 2);\n\n    let totalLength =\n      Math.PI * (rx + ry) * (1 + (3 * h) / Math.sqrt(4 - 3 * h));\n\n    return totalLength;\n  }\n\n  _getRectLength(el) {\n    return el.getAttribute('width') * 2 + el.getAttribute('height') * 2;\n  }\n\n  _getLineLength(el) {\n    return this._getDistance(\n      {\n        x: el.getAttribute('x1'),\n        y: el.getAttribute('y1')\n      },\n      {\n        x: el.getAttribute('x2'),\n        y: el.getAttribute('y2')\n      }\n    );\n  }\n\n  _getPolylineLength(el) {\n    const points = el.points;\n\n    let totalLength = 0;\n\n    let previousPos;\n\n    for (let i = 0; i < points.numberOfItems; i++) {\n      const currentPos = points.getItem(i);\n\n      if (i > 0) {\n        totalLength += this._getDistance(previousPos, currentPos);\n      }\n      previousPos = currentPos;\n    }\n    return totalLength;\n  }\n\n  _getPolygonLength(el) {\n    const points = el.points;\n\n    return (\n      this._getPolylineLength(el) +\n      this._getDistance(\n        points.getItem(points.numberOfItems - 1),\n        points.getItem(0)\n      )\n    );\n  }\n\n  _getTotalLength(el) {\n    let length;\n\n    let tagName = el.tagName.toLowerCase();\n\n    switch (tagName) {\n      case 'circle':\n        length = this._getCircleLength(el);\n        break;\n      case 'rect':\n        length = this._getRectLength(el);\n        break;\n      case 'line':\n        length = this._getLineLength(el);\n        break;\n      case 'polyline':\n        length = this._getPolylineLength(el);\n        break;\n      case 'polygon':\n        length = this._getPolygonLength(el);\n        break;\n      default:\n        length = el.getTotalLength();\n    }\n\n    return length;\n  }\n\n  /**\n   * _getPathPoints\n   * Responsible for returning a svg path coords.\n   * @return {array} path coords\n   */\n  _getPathPoints(el, length) {\n    let arr = [];\n\n    for (let i = 0; i < length; i++) {\n      let position = el.getPointAtLength(i);\n\n      arr.push({\n        x: position.x,\n        y: position.y\n      });\n    }\n    return arr;\n  }\n\n  /**\n   * _getStrokeDashArray\n   * @private\n   */\n  _getStrokeDashArray(path, length) {\n    let strokeDash;\n\n    if (path.strokeDash) {\n      strokeDash = this._getStrokeDashString(path.strokeDash, length);\n    } else if (this.config.strokeDash) {\n      strokeDash = this._getStrokeDashString(this.config.strokeDash, length);\n    } else {\n      strokeDash = length + ' ' + length;\n    }\n    return strokeDash;\n  }\n\n  /**\n   * _getStrokeDashString\n   * @private\n   */\n  _getStrokeDashString(dashArray, length) {\n    let strokeDashString = '';\n\n    let strokeDashArray = dashArray.split(',');\n\n    let strokeDashTotal = 0;\n\n    let strokeDashNum;\n\n    let strokeDashRemainder;\n\n    for (let i = strokeDashArray.length - 1; i >= 0; i--) {\n      strokeDashTotal += Number(strokeDashArray[i]);\n    }\n    strokeDashNum = Math.floor(length / strokeDashTotal);\n    strokeDashRemainder = length - strokeDashNum * strokeDashTotal;\n    for (let i = 0; i < strokeDashNum; i++) {\n      strokeDashString += dashArray + ', ';\n    }\n    let preArray = strokeDashString + strokeDashRemainder + ', ' + (length + 2);\n\n    return preArray.split(',').join('px,') + 'px';\n  }\n\n  _onVisibilityChange = () => {\n    if (document.hidden) {\n      this.pause();\n    } else {\n      this.resume();\n    }\n  };\n}\n\nconst win = window || {};\n\nwin.LazyLinePainter = LazyLinePainter;\nexport default LazyLinePainter;\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","EventEmitter","name","callback","this","_eventEmitterCallbacks","push","addListener","on","off","i","indexOf","splice","removeListener","emit","evt","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","trigger","easeLinear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","Math","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInBounce","easeOutBounce","easeInOutBounce","LazyLinePainter","el","config","_this","_classCallCheck","document","hidden","pause","resume","classList","add","assign","strokeWidth","strokeDash","strokeColor","strokeOverColor","strokeCap","strokeJoin","strokeOpacity","delay","ease","drawSequential","speedMultiplier","reverse","paused","progress","repeat","longestDuration","log","offset","getBoundingClientRect","Events","__raf","__paths","_generatePaths","_parseDataAttrs","_updateDuration","_setupPaths","addEventListener","_onVisibilityChange","paths","Boolean","dataset","llpComposed","querySelectorAll","_uncomposed","length","path","id","replace","llpId","llpDuration","llpDelay","console","erase","_paint","cancelAnimationFrame","_this2","requestAnimationFrame","adjustStartTime","startTime","elapsedTime","onStrokeCompleteDone","style","strokeDashoffset","onStrokeStartDone","remove","_setProgress","_setDelay","_setReverse","_setEase","_setRepeat","_getProgress","_updatePaths","totalDuration","_getTotalDuration","_getLongestDuration","_calcPathDurations","duration","startProgress","durationProgress","positions","_getPathPoints","_updatePosition","Number","llpReverse","llpEase","llpStrokeDash","_setStyleAttrs","llpStrokeColor","stroke","llpStrokeOpacity","llpStrokeWidth","llpStrokeCap","strokeLinecap","llpStrokeJoin","strokeLinejoin","index","_getPathLength","strokeDasharray","_getStrokeDashArray","_this3","timestamp","performance","now","_this4","linearProgress","paint","pathProgress","_getElapsedProgress","_setLine","_updateStrokeCallbacks","elapsedProgress","Easing","round","position","x","left","y","top","pathDelay","pathTotalDuration","_getTotalLength","p1","p2","getAttribute","rx","parseInt","ry","h","_getDistance","previousPos","points","totalLength","numberOfItems","currentPos","getItem","_getPolylineLength","tagName","toLowerCase","_getCircleLength","_getRectLength","_getLineLength","_getPolygonLength","getTotalLength","arr","getPointAtLength","_getStrokeDashString","dashArray","strokeDashNum","strokeDashRemainder","strokeDashString","strokeDashArray","split","strokeDashTotal","floor","join","window"],"sourceRoot":""}