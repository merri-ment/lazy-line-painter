{"version":3,"file":"lazy-line-painter-2.0.3.min.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,oBAAqB,GAAIH,GACN,iBAAZC,QACdA,QAAQ,qBAAuBD,IAE/BD,EAAK,qBAAuBC,GAC7B,CATD,CASGK,MAAM,I,mBCRT,IAAIC,EAAsB,CCA1BA,EAAwB,CAACL,EAASM,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAER,EAASO,IAC5EE,OAAOC,eAAeV,EAASO,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDF,EAAwB,CAACQ,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFT,EAAyBL,IACH,oBAAXkB,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeV,EAASkB,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeV,EAAS,aAAc,CAAEoB,OAAO,GAAO,G,6ICL9D,IAAIC,EAAe,CAEnBA,GAAkB,SAAUC,EAAMC,GAChCC,KAAKC,uBAAyBD,KAAKC,wBAA0B,CAAC,EAC9DD,KAAKC,uBAAuBH,GAAQE,KAAKC,uBAAuBH,IAAS,GACzEE,KAAKC,uBAAuBH,GAAMI,KAAKH,EACzC,GACAF,EAAaM,YAAcN,EAAaO,GAExCP,EAAaQ,IAAM,SAAUP,EAAMC,GAEjC,GADAC,KAAKC,uBAAyBD,KAAKC,wBAA0B,CAAC,EACxDH,KAAQE,KAAKC,uBAAnB,CACA,IAAMK,EAAIN,KAAKC,uBAAuBH,GAAMS,QAAQR,GAEhDO,EAAI,GACRN,KAAKC,uBAAuBH,GAAMU,OAAOF,EAAG,EAJM,CAKpD,EACAT,EAAaY,eAAiBZ,EAAaQ,IAE3CR,EAAaa,KAAO,SAAUZ,EAAMa,GAElC,GADAX,KAAKC,uBAAyBD,KAAKC,wBAA0B,CAAC,EACxDH,KAAQE,KAAKC,uBAAnB,CAAmD,IACGW,EADHC,E,25BAAAC,CAC9Bd,KAAKC,uBAAuBH,IAAK,IAAtD,IAAAe,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAwD,KAA/ClB,EAAQa,EAAAhB,MACf,GAAwB,mBAAbG,EAAyB,OACpCA,EAASY,EACX,CAAC,OAAAO,GAAAL,EAAAM,EAAAD,EAAA,SAAAL,EAAAO,GAAA,CAJiD,CAKpD,EACAvB,EAAawB,QAAUxB,EAAaa,KAEpC,UC8FA,EA3He,CACbY,WAAU,SAACN,GACT,OAAOA,CACT,EAEAO,WAAU,SAACP,GACT,OAAOA,EAAIA,CACb,EAEAQ,YAAW,SAACR,GACV,OAAOA,GAAK,EAAIA,EAClB,EAEAS,cAAa,SAACT,GAEZ,OADAA,GAAK,GACG,EAAU,GAAMA,EAAIA,GACpB,MAASA,GAAKA,EAAI,GAAK,EACjC,EAEAU,YAAW,SAACV,GACV,OAAOA,EAAIA,EAAIA,CACjB,EAEAW,aAAY,SAACX,GACX,QAASA,EAAIA,EAAIA,EAAI,CACvB,EAEAY,eAAc,SAACZ,GAEb,OADAA,GAAK,GACG,EAAU,GAAMA,EAAIA,EAAIA,EACzB,KAAQA,GAAK,GAAKA,EAAIA,EAAI,EACnC,EAEAa,YAAW,SAACb,GACV,OAAOA,EAAIA,EAAIA,EAAIA,CACrB,EAEAc,aAAY,SAACd,GACX,OAAO,KAAMA,EAAIA,EAAIA,EAAIA,CAC3B,EAEAe,eAAc,SAACf,GAEb,OADAA,GAAK,GACG,EAAU,GAAMA,EAAIA,EAAIA,EAAIA,GAC5B,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,EACxC,EAEAgB,YAAW,SAAChB,GACV,OAAOA,EAAIA,EAAIA,EAAIA,EAAIA,CACzB,EAEAiB,aAAY,SAACjB,GACX,QAASA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,CAC/B,EAEAkB,eAAc,SAAClB,GAEb,OADAA,GAAK,GACG,EAAU,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EACjC,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAC3C,EAEAmB,WAAU,SAACnB,GACT,OAAO,EAAIoB,KAAKC,IAAKrB,EAAIoB,KAAKE,GAAM,EACtC,EAEAC,YAAW,SAACvB,GACV,OAAOoB,KAAKI,IAAKxB,EAAIoB,KAAKE,GAAM,EAClC,EAEAG,cAAa,SAACzB,GACZ,MAAO,IAAO,EAAIoB,KAAKC,IAAID,KAAKE,GAAKtB,GACvC,EAEA0B,WAAU,SAAC1B,GACT,OAAa,IAANA,EAAU,EAAIoB,KAAKO,IAAI,KAAM3B,EAAI,EAC1C,EAEA4B,YAAW,SAAC5B,GACV,OAAa,IAANA,EAAUA,EAAI,EAAIoB,KAAKO,IAAI,GAAI,GAAK3B,EAC7C,EAEA6B,cAAa,SAAC7B,GACZ,OAAU,IAANA,EAAgB,EACV,IAANA,EAAgB,GACfA,GAAK,GAAK,EAAU,GAAMoB,KAAKO,IAAI,KAAM3B,EAAI,GAC3C,IAAqC,EAA7BoB,KAAKO,IAAI,GAAI,IAAM3B,EAAI,IACxC,EAEA8B,WAAU,SAAC9B,GACT,OAAO,EAAIoB,KAAKW,KAAK,EAAI/B,EAAIA,EAC/B,EAEAgC,YAAW,SAAChC,GACV,OAAOoB,KAAKW,KAAK,KAAM/B,EAAIA,EAC7B,EAEAiC,cAAa,SAACjC,GAEZ,OADAA,GAAK,GACG,GAAW,IAAOoB,KAAKW,KAAK,EAAI/B,EAAIA,GAAK,GAC1C,IAAOoB,KAAKW,KAAK,GAAK/B,GAAK,GAAKA,GAAK,EAC9C,EAEAkC,aAAY,SAAClC,GACX,OAAO,EAAIhB,KAAKmD,cAAc,EAAInC,EACpC,EAEAmC,cAAa,SAACnC,GACZ,OAAIA,EAAI,EAAI,KACH,OAASA,EAAIA,EACXA,EAAI,EAAI,KACV,QAAUA,GAAK,IAAM,MAAQA,EAAI,IAC/BA,EAAI,IAAM,KACZ,QAAUA,GAAK,KAAO,MAAQA,EAAI,MAEpC,QAAUA,GAAK,MAAQ,MAAQA,EAAI,OAC5C,EAEAoC,gBAAe,SAACpC,GACd,OAAIA,EAAI,GAAuC,GAA3BhB,KAAKkD,aAAiB,EAAJlC,GACC,GAAhChB,KAAKmD,cAAkB,EAAJnC,EAAQ,GAAW,EAC/C,GCxHK,IAAMqC,EAAW,SAACC,GACvB,MAAsB,iBAARA,CAChB,ECFaC,EAAe,oBAUfC,EACJ,QADIA,EAKH,SALGA,EAMD,WAGCC,EAEJ,SAACnE,GAAI,SAAAoE,OACLH,EAAY,kFAAAG,OAAiFpE,EAAI,eAH7FmE,EAIC,SAACnE,GAAI,SAAAoE,OAAQH,EAAY,gBAAAG,OAAepE,EAAI,oB,+yBCLO,IAE3DqE,EAAe,WAQnB,SAAAA,EAAYC,EAAIC,GAAQ,IAAAC,EAAA,M,4FAAAC,CAAA,KAAAJ,GA0cxBK,EAAA,eAQS,WACP,GAAKF,EAAKD,OAAV,CAKKC,EAAKD,OAAOI,YACfH,EAAKD,OAAOI,UAAYC,YAAYC,OAGtCL,EAAKpD,KAAK8C,GAGV,IAAIY,EAAYF,YAAYC,MAE5BL,EAAKD,OAAOQ,YAAcD,EAAYN,EAAKD,OAAOI,UAClDH,EAAKD,OAAOS,eACVR,EAAKD,OAAOQ,YAAcP,EAAKD,OAAOU,cAExCT,EAAKD,OAAOW,SAAWV,EAAKW,aAC1BX,EAAKD,OAAOS,eACZR,EAAKD,OAAOa,MAIdZ,EAAKa,eAEDb,EAAKD,OAAOS,gBAAkB,GAAKR,EAAKD,OAAOS,gBAAkB,EACnER,EAAKc,MAAQC,sBAAsBf,EAAKgB,QAEpChB,EAAKD,OAAOkB,OAAS,GACvBjB,EAAKD,OAAOkB,SACZjB,EAAKkB,UAC4B,IAAxBlB,EAAKD,OAAOkB,OACrBjB,EAAKkB,QAELlB,EAAKpD,KAAK8C,EAjCd,CAoCF,IAACQ,EAAA,4BAuSqB,WAChBiB,SAASC,OACXpB,EAAKqB,QAELrB,EAAKsB,QAET,IAryBEpF,KAAK4D,GAAKA,EACV5D,KAAK4D,GAAGyB,UAAUC,IAAI/B,GAEtBvD,KAAK6D,OAAS5E,OAAOsG,OACnB,CACEC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,gBAAiB,KACjBC,UAAW,KACXC,WAAY,KACZC,cAAe,KAEfC,MAAO,EACPrB,KAAM,KACNsB,gBAAgB,EAChBC,gBAAiB,EACjBC,SAAS,EACTC,QAAQ,EACR3B,SAAU,EACVO,OAAQ,EAERqB,gBAAiB,EACjBC,KAAK,EACLC,OAAQtG,KAAK4D,GAAG2C,yBAElB1C,EACA,CAAC,GAGH5E,OAAOsG,OAAOvF,KAAMwG,EAAQ,CAAC,GAE7BxG,KAAK4E,MAAQ,KACb5E,KAAKyG,QAAU,GAEfzG,KAAK0G,iBACL1G,KAAK2G,kBACL3G,KAAK4G,kBACL5G,KAAK6G,cAEL5B,SAAS6B,iBAAiB,mBAAoB9G,KAAK+G,oBACrD,C,QAovBC,O,EApvBApD,E,EAAA,EAAA5E,IAAA,iBAAAa,MAED,WACE,IAAIoH,EAKFA,EAHaC,QAAQjH,KAAK4D,GAAGsD,QAAQC,aAG7BnH,KAAK4D,GAAGwD,iBAAiB,iBAEzBpH,KAAKqH,cAGf,IAAK,IAAI/G,EAAI,EAAGA,EAAI0G,EAAMM,OAAQhH,IAAK,CACrC,IAAIiH,EAAO,CACT3D,GAAIoD,EAAM1G,IAGZN,KAAKyG,QAAQvG,KAAKqH,EACpB,CACF,GAAC,CAAAxI,IAAA,cAAAa,MAED,WACE,IAIIU,EAJE0G,EAAQhH,KAAK4D,GAAGwD,iBACpB,wDAKF,IAAK9G,EAAI,EAAGA,EAAI0G,EAAMM,OAAQhH,IAAK,CACjC,IAAIkH,EAAKxH,KAAK4D,GAAG4D,GAAGC,QAAQ,KAAM,IAGlCD,GADAA,EAAKA,EAAGC,QAAQ,IAAK,KACbA,QAAQ,IAAK,IACrBT,EAAM1G,GAAG4G,QAAQQ,MAAQF,EAAK,IAAMlH,EAE/B0G,EAAM1G,GAAG4G,QAAQS,cACpBX,EAAM1G,GAAG4G,QAAQS,YAAc,KAE5BX,EAAM1G,GAAG4G,QAAQS,cACpBX,EAAM1G,GAAG4G,QAAQU,SAAW,EAEhC,CAIA,OAFA5H,KAAK6H,SDxFL,0GC0FOb,CACT,GAAC,CAAAjI,IAAA,WAAAa,MAED,SAASkI,GACH9H,KAAK6D,OAAOwC,KACd0B,QAAQC,KAAKF,EAEjB,GAEA,CAAA/I,IAAA,QAAAa,MAKA,SAAMiE,GAEJ5E,OAAOsG,OAAOvF,KAAK6D,OAAQA,GAC3B7D,KAAK4G,kBAEL5G,KAAKiI,QAGLjI,KAAK8E,SAGL9E,KAAKU,KAAK8C,EACZ,GAEA,CAAAzE,IAAA,QAAAa,MAKA,WACMI,KAAK6D,SACP7D,KAAK6D,OAAOsC,QAAS,GAEvB+B,qBAAqBlI,KAAK4E,OAC1B5E,KAAKU,KD9IA,QC+IP,GAEA,CAAA3B,IAAA,SAAAa,MAKA,WAAS,IAAAuI,EAAA,KACHnI,KAAK6D,QAAU7D,KAAK6D,OAAOsC,SAC7BtB,uBAAsB,WACpBsD,EAAKC,iBACP,IACApI,KAAK6D,OAAOsC,QAAS,EACrBnG,KAAKU,KD3JD,UC6JR,GAEA,CAAA3B,IAAA,QAAAa,MAMA,WAEEI,KAAK6D,OAAOI,UAAY,KACxBjE,KAAK6D,OAAOQ,YAAc,KAC1B6D,qBAAqBlI,KAAK4E,OAG1B5E,KAAK6D,OAAOwE,sBAAuB,EAGnCrI,KAAK6D,OAAOsC,QAAS,EAGrB,IAAK,IAAI7F,EAAI,EAAGA,EAAIN,KAAKyG,QAAQa,OAAQhH,IAAK,CAC5C,IAAIiH,EAAOvH,KAAKyG,QAAQnG,GAExBiH,EAAK3D,GAAG0E,MAAMC,iBAAmBhB,EAAKD,OACtCC,EAAKc,sBAAuB,EAC5Bd,EAAKiB,mBAAoB,CAC3B,CAEAxI,KAAKU,KDzLA,QC0LP,GAEA,CAAA3B,IAAA,UAAAa,MAKA,WAEEI,KAAK6D,OAAS,KAGd7D,KAAK4D,GAAG6E,SACRzI,KAAK4D,GAAK,IACZ,GAAC,CAAA7E,IAAA,MAAAa,MAED,SAAIN,EAAMM,GAER,OADAI,KAAK6H,SAASpE,EAAuBnE,IAC7BA,GACN,IDvNM,WCwNJU,KAAKwE,SAAS5E,GACd,MACF,IDzNG,QC0NDI,KAAK+F,MAAMnG,GACX,MACF,ID3NK,UC4NHI,KAAKkG,QAAQtG,GACb,MACF,IDjOE,OCkOAI,KAAK0E,KAAK9E,GACV,MACF,IDhOI,SCiOFI,KAAK+E,OAAOnF,GACZ,MACF,QACEI,KAAK6H,SAASpE,GAEpB,GAEA,CAAA1E,IAAA,WAAAa,MAKA,SAAS0D,GACP,GAAID,EAASC,GACX,GAAIA,EAAM,GAAKA,EAAM,EAAG,CACtB,IAAMoF,EF3OO,SAACC,GAA0B,IAArBC,EAAGC,UAAAvB,OAAA,QAAAwB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGE,EAAGF,UAAAvB,OAAA,QAAAwB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACxC,OAAOF,EAAMC,EAAMA,EAAMD,EAAMI,EAAMA,EAAMJ,CAC7C,CEyOwBK,CAAM1F,EAAK,EAAG,GAE9BtD,KAAK6H,SD9NO,SAACvE,EAAKoF,GAAO,SAAAhF,OAC1BH,EAAY,sBAAAG,OAAqBJ,EAAG,wCAAAI,OAAuCgF,EAAO,CC6NnEjF,CAAyBH,EAAKoF,IAC5C1I,KAAKiJ,aAAaP,EACpB,MACE1I,KAAKiJ,aAAa3F,QAGpBtD,KAAK6H,SDlOC,SAACvE,GAAG,SAAAI,OAAQH,EAAY,sBAAAG,OAAqBJ,EAAG,oBCkOxCG,CAAiBH,IAGjC,OAAOtD,KAAK6D,OAAOW,QACrB,GAEA,CAAAzF,IAAA,QAAAa,MAKA,SAAM0D,GACAD,EAASC,GACXtD,KAAKkJ,UAAU5F,GAEftD,KAAK6H,SDhPF,SAACvE,GAAG,SAAAI,OAAQH,EAAY,mBAAAG,OAAkBJ,EAAG,oBCgPlCG,CAAcH,GAEhC,GAEA,CAAAvE,IAAA,UAAAa,MAKA,SAAQ0D,IFnRe,SAACA,GACxB,MAAsB,kBAARA,CAChB,CEkRQ6F,CAAU7F,GAGZtD,KAAK6H,SD5PA,SAACvE,GAAG,SAAAI,OAAQH,EAAY,qBAAAG,OAAoBJ,EAAG,qBC4PtCG,CAAgBH,IAF9BtD,KAAKoJ,YAAY9F,EAIrB,GAEA,CAAAvE,IAAA,OAAAa,MAKA,SAAK0D,IF5RiB,SAACA,GACvB,MAAsB,iBAARA,CAChB,CE2RQ+F,CAAS/F,GAGXtD,KAAK6H,SDxQH,SAACvE,GAAG,SAAAI,OAAQH,EAAY,kBAAAG,OAAiBJ,EAAG,oBCwQhCG,CAAaH,IAF3BtD,KAAKsJ,SAAShG,EAIlB,GAEA,CAAAvE,IAAA,SAAAa,MAKA,SAAO0D,GACDD,EAASC,GACXtD,KAAKuJ,WAAWjG,GAEhBtD,KAAK6H,SDpRD,SAACvE,GAAG,SAAAI,OAAQH,EAAY,oBAAAG,OAAmBJ,EAAG,oBCoRpCG,CAAeH,GAEjC,GAAC,CAAAvE,IAAA,aAAAa,MAED,SAAWmF,GACT/E,KAAK6D,OAAOkB,OAASA,CACvB,GAAC,CAAAhG,IAAA,WAAAa,MAED,SAAS8E,GACP1E,KAAK6D,OAAOa,KAAOA,CACrB,GAAC,CAAA3F,IAAA,eAAAa,MAED,SAAa4E,GACXxE,KAAKmF,QACLnF,KAAK6D,OAAOW,SAAWxE,KAAKyE,aAAaD,EAAUxE,KAAK6D,OAAOa,MAC/D1E,KAAK2E,eACL3E,KAAK6D,OAAOQ,YAAcrE,KAAK6D,OAAOW,SAAWxE,KAAK6D,OAAOU,aAC/D,GAAC,CAAAxF,IAAA,YAAAa,MAED,SAAUmG,GACR/F,KAAK6D,OAAOkC,MAAQA,EACpB/F,KAAK4G,iBACP,GAAC,CAAA7H,IAAA,cAAAa,MAED,SAAYsG,GACVlG,KAAK6D,OAAOqC,QAAUA,EACtBlG,KAAK4G,iBACP,GAAC,CAAA7H,IAAA,kBAAAa,MAED,WACE,IAAI2E,EAAgBvE,KAAKwJ,oBAErBpD,EAAkBpG,KAAKyJ,sBAE3BzJ,KAAK6D,OAAOU,cAAgBvE,KAAK6D,OAAOmC,eACtCzB,EACA6B,EACFpG,KAAK6D,OAAOU,eAAiBvE,KAAK6D,OAAOkC,MAEzC/F,KAAK0J,oBACP,GAAC,CAAA3K,IAAA,qBAAAa,MAED,WACE,IAAK,IAAIU,EAAI,EAAGA,EAAIN,KAAKyG,QAAQa,OAAQhH,IAAK,CAC5C,IAEI2D,EAFAsD,EAAOvH,KAAKyG,QAAQnG,GAIxBiH,EAAK/C,SAAW,EAIZP,EAFAjE,KAAK6D,OAAOqC,QACVlG,KAAK6D,OAAOmC,eACF,EAEAhG,KAAK6D,OAAOU,eAAiBgD,EAAKxB,MAAQwB,EAAKoC,UAGzD3J,KAAK6D,OAAOmC,eACF,EAEAhG,KAAK6D,OAAOkC,MAAQwB,EAAKxB,MAIzCwB,EAAKtD,UAAYA,EACjBsD,EAAKqC,cAAgBrC,EAAKtD,UAAYjE,KAAK6D,OAAOU,cAClDgD,EAAKsC,iBAAmBtC,EAAKoC,SAAW3J,KAAK6D,OAAOU,aACtD,CACF,GAEA,CAAAxF,IAAA,MAAAa,MAIA,WACE,OAAOI,KAAK6D,MACd,GAEA,CAAA9E,IAAA,SAAAa,MAIA,WACEI,KAAK6D,OAAOyC,OAAStG,KAAK4D,GAAG2C,wBAG7B,IAAK,IAAIjG,EAAI,EAAGA,EAAIN,KAAKyG,QAAQa,OAAQhH,IAAK,CAC5C,IAAIiH,EAAOvH,KAAKyG,QAAQnG,GAExBiH,EAAK3D,GAAG2C,wBACRgB,EAAKuC,UAAY9J,KAAK+J,eAAexC,EAAK3D,GAAI2D,EAAKD,QACnDtH,KAAKgK,gBAAgBzC,EACvB,CACF,GAAC,CAAAxI,IAAA,kBAAAa,MAED,WACE,IAAK,IAAIU,EAAI,EAAGA,EAAIN,KAAKyG,QAAQa,OAAQhH,IAAK,CAC5C,IAAIiH,EAAOvH,KAAKyG,QAAQnG,GAExBiH,EAAKC,GAAKD,EAAK3D,GAAGsD,QAAQQ,MAC1BH,EAAKxB,MAAQkE,OAAO1C,EAAK3D,GAAGsD,QAAQU,WAAa,EACjDL,EAAKoC,SAAWM,OAAO1C,EAAK3D,GAAGsD,QAAQS,cAAgB,EACvDJ,EAAKrB,QAAUe,QAAQM,EAAK3D,GAAGsD,QAAQgD,cAAe,EACtD3C,EAAK7C,KAAOuF,OAAO1C,EAAK3D,GAAGsD,QAAQiD,UAAY,KAC/C5C,EAAK9B,WAAa8B,EAAK3D,GAAGsD,QAAQkD,eAAiB,KACnD7C,EAAKxB,OAAS/F,KAAK6D,OAAOoC,gBAC1BsB,EAAKoC,UAAY3J,KAAK6D,OAAOoC,gBAE7BjG,KAAKqK,eAAe9C,EACtB,CACF,GAAC,CAAAxI,IAAA,iBAAAa,MAED,SAAe2H,GACbA,EAAK7B,YACH6B,EAAK3D,GAAGsD,QAAQoD,gBAAkBtK,KAAK6D,OAAO6B,YAC5C6B,EAAK7B,cACP6B,EAAK3D,GAAG0E,MAAMiC,OAAShD,EAAK7B,aAG9B6B,EAAKzB,cACHyB,EAAK3D,GAAGsD,QAAQsD,kBAAoBxK,KAAK6D,OAAOiC,cAC9CyB,EAAKzB,gBACPyB,EAAK3D,GAAG0E,MAAMxC,cAAgByB,EAAKzB,eAGrCyB,EAAK/B,YACH+B,EAAK3D,GAAGsD,QAAQuD,gBAAkBzK,KAAK6D,OAAO2B,YAC5C+B,EAAK/B,cACP+B,EAAK3D,GAAG0E,MAAM9C,YAAc+B,EAAK/B,aAGnC+B,EAAK3B,UAAY2B,EAAK3D,GAAGsD,QAAQwD,cAAgB1K,KAAK6D,OAAO+B,UACzD2B,EAAK3B,YACP2B,EAAK3D,GAAG0E,MAAMqC,cAAgBpD,EAAK3B,WAGrC2B,EAAK1B,WAAa0B,EAAK3D,GAAGsD,QAAQ0D,eAAiB5K,KAAK6D,OAAOgC,WAC3D0B,EAAK1B,aACP0B,EAAK3D,GAAG0E,MAAMuC,eAAiBtD,EAAK1B,WAExC,GAAC,CAAA9G,IAAA,cAAAa,MAED,WACE,IAAK,IAAIU,EAAI,EAAGA,EAAIN,KAAKyG,QAAQa,OAAQhH,IAAK,CAC5C,IAAIiH,EAAOvH,KAAKyG,QAAQnG,GAExBiH,EAAKuD,MAAQxK,EACbiH,EAAKD,OAAStH,KAAK+K,eAAexD,EAAK3D,IACvC2D,EAAKuC,UAAY9J,KAAK+J,eAAexC,EAAK3D,GAAI2D,EAAKD,QAEnDC,EAAK3D,GAAG0E,MAAM0C,gBAAkBhL,KAAKiL,oBACnC1D,EACAA,EAAKD,QAEPC,EAAK3D,GAAG0E,MAAMC,iBAAmBhB,EAAKD,OAEtCC,EAAKiB,mBAAoB,EACzBjB,EAAKc,sBAAuB,CAC9B,CACF,GAEA,CAAAtJ,IAAA,kBAAAa,MAOA,WAAkB,IAAAsL,EAAA,KACZ9G,EAAYF,YAAYC,MAE5BnE,KAAK6D,OAAOI,UAAYG,EAAYpE,KAAK6D,OAAOQ,YAChDQ,uBAAsB,WACpBqG,EAAKpG,QACP,GACF,GAAC,CAAA/F,IAAA,eAAAa,MAmDD,WACE,IAAK,IAAIU,EAAI,EAAGA,EAAIN,KAAKyG,QAAQa,OAAQhH,IAAK,CAC5C,IAAIiH,EAAOvH,KAAKyG,QAAQnG,GAEpB6K,EAAenL,KAAKoL,oBAAoB7D,GAE5CA,EAAK/C,SAAWxE,KAAKyE,aAAa0G,EAAc5D,EAAK7C,MACrD1E,KAAKqL,SAAS9D,GACdvH,KAAKgK,gBAAgBzC,GACrBvH,KAAKsL,uBAAuB/D,EAC9B,CACF,GAAC,CAAAxI,IAAA,sBAAAa,MAED,SAAoB2H,GAClB,IAAIgE,EAiBJ,OAdEvL,KAAK6D,OAAOW,UAAY+C,EAAKqC,eAC7B5J,KAAK6D,OAAOW,UAAY+C,EAAKqC,cAAgBrC,EAAKsC,iBAElD0B,GACGvL,KAAK6D,OAAOW,SAAW+C,EAAKqC,eAAiBrC,EAAKsC,iBAErD7J,KAAK6D,OAAOW,UACZ+C,EAAKqC,cAAgBrC,EAAKsC,iBAE1B0B,EAAkB,EACTvL,KAAK6D,OAAOW,UAAY+C,EAAKqC,gBACtC2B,EAAkB,GAGbA,CACT,GAAC,CAAAxM,IAAA,eAAAa,MAED,SAAa0E,EAAgBI,GAC3B,IAAIF,EAAWF,EAKf,OAHII,IACFF,EAAWgH,EAAO9G,GAAMJ,IAEnBE,CACT,GAAC,CAAAzF,IAAA,WAAAa,MAED,SAAS2H,GACP,IAAI3D,EAAK2D,EAAK3D,GAEV0D,EAASC,EAAK/C,SAAW+C,EAAKD,OAE9BC,EAAKrB,SAEElG,KAAK6D,OAAOqC,QADrBtC,EAAG0E,MAAMC,kBAAoBhB,EAAKD,OAASA,EAI3C1D,EAAG0E,MAAMC,iBAAmBhB,EAAKD,OAASA,CAE9C,GAAC,CAAAvI,IAAA,yBAAAa,MAED,SAAuB2H,GACC,IAAlBA,EAAK/C,SACF+C,EAAKc,uBACRd,EAAKc,sBAAuB,EAC5BrI,KAAKU,KAAK,GAADgD,OAAIF,EAAiB,KAAAE,OAAI6D,EAAKC,IAAMD,GAC7CvH,KAAKU,KAAK,GAADgD,OAAIF,EAAiB,QAAQ+D,IAE/BA,EAAK/C,SAAW,OACpB+C,EAAKiB,oBACRxI,KAAKU,KAAK,GAADgD,OAAIF,EAAc,KAAAE,OAAI6D,EAAKC,IAAMD,GAC1CvH,KAAKU,KAAK,GAADgD,OAAIF,EAAc,QAAQ+D,GACnCA,EAAKiB,mBAAoB,GAG3BxI,KAAKU,KAAK,GAADgD,OAAIF,EAAe,KAAAE,OAAI6D,EAAKC,IAAMD,GAC3CvH,KAAKU,KAAK,GAADgD,OAAIF,EAAe,QAAQ+D,GAExC,GAEA,CAAAxI,IAAA,kBAAAa,MAKA,SAAgB2H,GACd,IAAIuD,EAAQ1I,KAAKqJ,MAAMlE,EAAK/C,UAAY+C,EAAKD,OAAS,IAElDoE,EAAWnE,EAAKuC,UAAUgB,GAE1BY,IACFnE,EAAKmE,SAAW,CACdC,EAAG3L,KAAK6D,OAAOyC,OAAOsF,KAAOF,EAASC,EACtCE,EAAG7L,KAAK6D,OAAOyC,OAAOwF,IAAMJ,EAASG,GAG3C,GAAC,CAAA9M,IAAA,oBAAAa,MAED,WAKE,IAJA,IAAI2E,EAAgB,EAEhByC,EAAQhH,KAAKyG,QAERnG,EAAI,EAAGA,EAAI0G,EAAMM,OAAQhH,IAAK,CACrC,IAAIyL,EAAY/E,EAAM1G,GAAGyF,OAAS,EAElCxB,GAAiByC,EAAM1G,GAAGqJ,SAAWoC,CACvC,CAEA,OAAOxH,CACT,GAAC,CAAAxF,IAAA,sBAAAa,MAED,WAKE,IAJA,IAAIwG,EAAkB,EAElBY,EAAQhH,KAAKyG,QAERnG,EAAI,EAAGA,EAAI0G,EAAMM,OAAQhH,IAAK,CACrC,IAAI0L,EAAoBhF,EAAM1G,GAAGyF,MAAQiB,EAAM1G,GAAGqJ,SAE9CqC,EAAoB5F,IACtBA,EAAkB4F,EAEtB,CAEA,OAAO5F,CACT,GAEA,CAAArH,IAAA,iBAAAa,MAKA,SAAegE,GACb,OAAO5D,KAAKiM,gBAAgBrI,EAC9B,GAAC,CAAA7E,IAAA,eAAAa,MAED,SAAasM,EAAIC,GACf,OAAO/J,KAAKW,KAAKX,KAAKO,IAAIwJ,EAAGR,EAAIO,EAAGP,EAAG,GAAKvJ,KAAKO,IAAIwJ,EAAGN,EAAIK,EAAGL,EAAG,GACpE,GAAC,CAAA9M,IAAA,mBAAAa,MAED,SAAiBgE,GACf,OAAiB,EAAVxB,KAAKE,GAASsB,EAAGwI,aAAa,IACvC,GAAC,CAAArN,IAAA,oBAAAa,MAED,SAAkBgE,GAChB,IAAIyI,EAAKC,SAAS1I,EAAGwI,aAAa,MAAO,GAErCG,EAAKD,SAAS1I,EAAGwI,aAAa,MAAO,GAErCI,EAAIpK,KAAKO,IAAI0J,EAAKE,EAAI,GAAKnK,KAAKO,IAAI0J,EAAKE,EAAI,GAKjD,OAFEnK,KAAKE,IAAM+J,EAAKE,IAAO,EAAK,EAAIC,EAAKpK,KAAKW,KAAK,EAAI,EAAIyJ,GAG3D,GAAC,CAAAzN,IAAA,iBAAAa,MAED,SAAegE,GACb,OAAkC,EAA3BA,EAAGwI,aAAa,SAA2C,EAA5BxI,EAAGwI,aAAa,SACxD,GAAC,CAAArN,IAAA,iBAAAa,MAED,SAAegE,GACb,OAAO5D,KAAKyM,aACV,CACEd,EAAG/H,EAAGwI,aAAa,MACnBP,EAAGjI,EAAGwI,aAAa,OAErB,CACET,EAAG/H,EAAGwI,aAAa,MACnBP,EAAGjI,EAAGwI,aAAa,OAGzB,GAAC,CAAArN,IAAA,qBAAAa,MAED,SAAmBgE,GAOjB,IANA,IAII8I,EAJEC,EAAS/I,EAAG+I,OAEdC,EAAc,EAITtM,EAAI,EAAGA,EAAIqM,EAAOE,cAAevM,IAAK,CAC7C,IAAMwM,EAAaH,EAAOI,QAAQzM,GAE9BA,EAAI,IACNsM,GAAe5M,KAAKyM,aAAaC,EAAaI,IAEhDJ,EAAcI,CAChB,CACA,OAAOF,CACT,GAAC,CAAA7N,IAAA,oBAAAa,MAED,SAAkBgE,GAChB,IAAM+I,EAAS/I,EAAG+I,OAElB,OACE3M,KAAKgN,mBAAmBpJ,GACxB5D,KAAKyM,aACHE,EAAOI,QAAQJ,EAAOE,cAAgB,GACtCF,EAAOI,QAAQ,GAGrB,GAAC,CAAAhO,IAAA,kBAAAa,MAED,SAAgBgE,GACd,IAAI0D,EAIJ,OAFc1D,EAAGqJ,QAAQC,eAGvB,IAAK,SACH5F,EAAStH,KAAKmN,iBAAiBvJ,GAC/B,MACF,IAAK,OACH0D,EAAStH,KAAKoN,eAAexJ,GAC7B,MACF,IAAK,OACH0D,EAAStH,KAAKqN,eAAezJ,GAC7B,MACF,IAAK,WACH0D,EAAStH,KAAKgN,mBAAmBpJ,GACjC,MACF,IAAK,UACH0D,EAAStH,KAAKsN,kBAAkB1J,GAChC,MACF,QACE0D,EAAS1D,EAAG2J,iBAGhB,OAAOjG,CACT,GAEA,CAAAvI,IAAA,iBAAAa,MAKA,SAAegE,EAAI0D,GAGjB,IAFA,IAAIkG,EAAM,GAEDlN,EAAI,EAAGA,EAAIgH,EAAQhH,IAAK,CAC/B,IAAIoL,EAAW9H,EAAG6J,iBAAiBnN,GAEnCkN,EAAItN,KAAK,CACPyL,EAAGD,EAASC,EACZE,EAAGH,EAASG,GAEhB,CACA,OAAO2B,CACT,GAEA,CAAAzO,IAAA,sBAAAa,MAIA,SAAoB2H,EAAMD,GAUxB,OAPIC,EAAK9B,WACMzF,KAAK0N,qBAAqBnG,EAAK9B,WAAY6B,GAC/CtH,KAAK6D,OAAO4B,WACRzF,KAAK0N,qBAAqB1N,KAAK6D,OAAO4B,WAAY6B,GAElDA,EAAS,IAAMA,CAGhC,GAEA,CAAAvI,IAAA,uBAAAa,MAIA,SAAqB+N,EAAWrG,GAW9B,IAVA,IAMIsG,EAEAC,EARAC,EAAmB,GAEnBC,EAAkBJ,EAAUK,MAAM,KAElCC,EAAkB,EAMb3N,EAAIyN,EAAgBzG,OAAS,EAAGhH,GAAK,EAAGA,IAC/C2N,GAAmBhE,OAAO8D,EAAgBzN,IAG5CuN,EAAsBvG,GADtBsG,EAAgBxL,KAAK8L,MAAM5G,EAAS2G,IACWA,EAC/C,IAAK,IAAI3N,EAAI,EAAGA,EAAIsN,EAAetN,IACjCwN,GAAoBH,EAAY,KAIlC,OAFeG,EAAmBD,EAAsB,MAAQvG,EAAS,IAEzD0G,MAAM,KAAKG,KAAK,OAAS,IAC3C,I,uEAACxK,CAAA,CAtyBkB,IAizBTyK,QAAU,CAAC,GAEnBzK,gBAAkBA,EACtB,U","sources":["webpack://lazy-line-painter/webpack/universalModuleDefinition","webpack://lazy-line-painter/webpack/bootstrap","webpack://lazy-line-painter/webpack/runtime/define property getters","webpack://lazy-line-painter/webpack/runtime/hasOwnProperty shorthand","webpack://lazy-line-painter/webpack/runtime/make namespace object","webpack://lazy-line-painter/./src/events.js","webpack://lazy-line-painter/./src/easing.js","webpack://lazy-line-painter/./src/utils.js","webpack://lazy-line-painter/./src/consts.js","webpack://lazy-line-painter/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lazy-line-painter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lazy-line-painter\"] = factory();\n\telse\n\t\troot[\"lazy-line-painter\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","let EventEmitter = {};\n\nEventEmitter.on = function (name, callback) {\n  this._eventEmitterCallbacks = this._eventEmitterCallbacks || {};\n  this._eventEmitterCallbacks[name] = this._eventEmitterCallbacks[name] || [];\n  this._eventEmitterCallbacks[name].push(callback);\n};\nEventEmitter.addListener = EventEmitter.on;\n\nEventEmitter.off = function (name, callback) {\n  this._eventEmitterCallbacks = this._eventEmitterCallbacks || {};\n  if (!(name in this._eventEmitterCallbacks)) return;\n  const i = this._eventEmitterCallbacks[name].indexOf(callback);\n\n  if (i < 0) return;\n  this._eventEmitterCallbacks[name].splice(i, 1);\n};\nEventEmitter.removeListener = EventEmitter.off;\n\nEventEmitter.emit = function (name, evt) {\n  this._eventEmitterCallbacks = this._eventEmitterCallbacks || {};\n  if (!(name in this._eventEmitterCallbacks)) return;\n  for (let callback of this._eventEmitterCallbacks[name]) {\n    if (typeof callback !== \"function\") return;\n    callback(evt);\n  }\n};\nEventEmitter.trigger = EventEmitter.emit;\n\nexport default EventEmitter;\n","const Easing = {\n  easeLinear(n) {\n    return n;\n  },\n\n  easeInQuad(n) {\n    return n * n;\n  },\n\n  easeOutQuad(n) {\n    return n * (2 - n);\n  },\n\n  easeInOutQuad(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n;\n    return -0.5 * (--n * (n - 2) - 1);\n  },\n\n  easeInCubic(n) {\n    return n * n * n;\n  },\n\n  easeOutCubic(n) {\n    return --n * n * n + 1;\n  },\n\n  easeInOutCubic(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n * n;\n    return 0.5 * ((n -= 2) * n * n + 2);\n  },\n\n  easeInQuart(n) {\n    return n * n * n * n;\n  },\n\n  easeOutQuart(n) {\n    return 1 - --n * n * n * n;\n  },\n\n  easeInOutQuart(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n * n * n;\n    return -0.5 * ((n -= 2) * n * n * n - 2);\n  },\n\n  easeInQuint(n) {\n    return n * n * n * n * n;\n  },\n\n  easeOutQuint(n) {\n    return --n * n * n * n * n + 1;\n  },\n\n  easeInOutQuint(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n * n * n * n;\n    return 0.5 * ((n -= 2) * n * n * n * n + 2);\n  },\n\n  easeInSine(n) {\n    return 1 - Math.cos((n * Math.PI) / 2);\n  },\n\n  easeOutSine(n) {\n    return Math.sin((n * Math.PI) / 2);\n  },\n\n  easeInOutSine(n) {\n    return 0.5 * (1 - Math.cos(Math.PI * n));\n  },\n\n  easeInExpo(n) {\n    return n === 0 ? 0 : Math.pow(1024, n - 1);\n  },\n\n  easeOutExpo(n) {\n    return n === 1 ? n : 1 - Math.pow(2, -10 * n);\n  },\n\n  easeInOutExpo(n) {\n    if (n === 0) return 0;\n    if (n === 1) return 1;\n    if ((n *= 2) < 1) return 0.5 * Math.pow(1024, n - 1);\n    return 0.5 * (-Math.pow(2, -10 * (n - 1)) + 2);\n  },\n\n  easeInCirc(n) {\n    return 1 - Math.sqrt(1 - n * n);\n  },\n\n  easeOutCirc(n) {\n    return Math.sqrt(1 - --n * n);\n  },\n\n  easeInOutCirc(n) {\n    n *= 2;\n    if (n < 1) return -0.5 * (Math.sqrt(1 - n * n) - 1);\n    return 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1);\n  },\n\n  easeInBounce(n) {\n    return 1 - this.easeOutBounce(1 - n);\n  },\n\n  easeOutBounce(n) {\n    if (n < 1 / 2.75) {\n      return 7.5625 * n * n;\n    } else if (n < 2 / 2.75) {\n      return 7.5625 * (n -= 1.5 / 2.75) * n + 0.75;\n    } else if (n < 2.5 / 2.75) {\n      return 7.5625 * (n -= 2.25 / 2.75) * n + 0.9375;\n    }\n    return 7.5625 * (n -= 2.625 / 2.75) * n + 0.984375;\n  },\n\n  easeInOutBounce(n) {\n    if (n < 0.5) return this.easeInBounce(n * 2) * 0.5;\n    return this.easeOutBounce(n * 2 - 1) * 0.5 + 0.5;\n  }\n};\n\nexport default Easing;\n","export const isNumber = (val) => {\n  return typeof val === \"number\";\n};\n\nexport const isBoolean = (val) => {\n  return typeof val === \"boolean\";\n};\n\nexport const isString = (val) => {\n  return typeof val === \"string\";\n};\n\nexport const clamp = (num, min = 0, max = 1) => {\n  return num < min ? min : num > max ? max : num;\n};\n","export const PROJECT_NAME = \"lazy-line-painter\";\n\nexport const PROP = {\n  EASE: \"ease\",\n  PROGRESS: \"progress\",\n  DELAY: \"delay\",\n  REVERSE: \"reverse\",\n  REPEAT: \"repeat\"\n};\n\nexport const CALLBACK = {\n  START: \"start\",\n  PAUSE: \"pause\",\n  RESUME: \"resume\",\n  ERASE: \"erase\",\n  UPDATE: \"update\",\n  COMPLETE: \"complete\"\n};\n\nexport const WARNING = {\n  DEPRECATED: {\n    SET: (prop) =>\n      `${PROJECT_NAME} - .set() function deprecated, will be removed in future release. Please use .${prop}() instead`,\n    SET_PROP: (prop) => `${PROJECT_NAME} - property ${prop} can not be set`\n  },\n  UNCOMPOSED:\n    \"This lazy line is uncomposed! Visit https://lazylinepainter.com/#composer to compose your masterpiece!\",\n  PROGRESS_CLAMPED: (val, clamped) =>\n    `${PROJECT_NAME} - progress value ${val} outside of range [0-1], clamped to ${clamped}`,\n  PROGRESS: (val) => `${PROJECT_NAME} - progress value ${val} not type Number`,\n  DELAY: (val) => `${PROJECT_NAME} - delay value ${val} not type Number`,\n  REVERSE: (val) => `${PROJECT_NAME} - reverse value ${val} not type Boolean`,\n  EASE: (val) => `${PROJECT_NAME} - ease value ${val} not type String`,\n  REPEAT: (val) => `${PROJECT_NAME} - repeat value ${val} not type Number`\n};\n","/*\n * Lazy Line Painter\n * SVG Stroke animation.\n *\n * https://github.com/merri-ment/lazy-line-painter\n * https://www.lazylinepainter.com\n * https://www.merriment.info\n *\n * Copyright 2013-2023 Merriment\n * All rights reserved.\n *\n * Licensed under the MIT license.\n *\n */\n\nimport Events from \"./events\";\nimport Easing from \"./easing\";\nimport { isNumber, isBoolean, isString, clamp } from \"./utils\";\nimport { PROP, CALLBACK, PROJECT_NAME, WARNING } from \"./consts\";\n\nclass LazyLinePainter {\n  /**\n   * init\n   * Responsible for caching user options,\n   * @public\n   * @param  {object} opts user defined options\n   */\n\n  constructor(el, config) {\n    this.el = el;\n    this.el.classList.add(PROJECT_NAME);\n\n    this.config = Object.assign(\n      {\n        strokeWidth: null,\n        strokeDash: null,\n        strokeColor: null,\n        strokeOverColor: null,\n        strokeCap: null,\n        strokeJoin: null,\n        strokeOpacity: null,\n\n        delay: 0,\n        ease: null,\n        drawSequential: false,\n        speedMultiplier: 1,\n        reverse: false,\n        paused: false,\n        progress: 0,\n        repeat: 0,\n\n        longestDuration: 0,\n        log: true,\n        offset: this.el.getBoundingClientRect()\n      },\n      config,\n      {}\n    );\n\n    Object.assign(this, Events, {});\n\n    this.__raf = null;\n    this.__paths = [];\n\n    this._generatePaths();\n    this._parseDataAttrs();\n    this._updateDuration();\n    this._setupPaths();\n\n    document.addEventListener(\"visibilitychange\", this._onVisibilityChange);\n  }\n\n  _generatePaths() {\n    let paths;\n\n    let composed = Boolean(this.el.dataset.llpComposed);\n\n    if (composed) {\n      paths = this.el.querySelectorAll(\"[data-llp-id]\");\n    } else {\n      paths = this._uncomposed();\n    }\n\n    for (let i = 0; i < paths.length; i++) {\n      let path = {\n        el: paths[i]\n      };\n\n      this.__paths.push(path);\n    }\n  }\n\n  _uncomposed() {\n    const paths = this.el.querySelectorAll(\n      \"path, polygon, circle, ellipse, polyline, line, rect\"\n    );\n\n    let i;\n\n    for (i = 0; i < paths.length; i++) {\n      let id = this.el.id.replace(/ /g, \"\");\n\n      id = id.replace(\".\", \"\");\n      id = id.replace(\"-\", \"\");\n      paths[i].dataset.llpId = id + \"-\" + i;\n\n      if (!paths[i].dataset.llpDuration) {\n        paths[i].dataset.llpDuration = 1000;\n      }\n      if (!paths[i].dataset.llpDuration) {\n        paths[i].dataset.llpDelay = 0;\n      }\n    }\n\n    this._warning(WARNING.UNCOMPOSED);\n\n    return paths;\n  }\n\n  _warning(message) {\n    if (this.config.log) {\n      console.warn(message);\n    }\n  }\n\n  /**\n   * paint\n   * Responsible for drawing path.\n   * @public\n   */\n  paint(config) {\n    // update playback arguments\n    Object.assign(this.config, config);\n    this._updateDuration();\n\n    this.erase();\n\n    // begin animation\n    this._paint();\n\n    // fire start callback\n    this.emit(CALLBACK.START);\n  }\n\n  /**\n   * pause\n   * Responsible for pausing path animation.\n   * @public\n   */\n  pause() {\n    if (this.config) {\n      this.config.paused = true;\n    }\n    cancelAnimationFrame(this.__raf);\n    this.emit(CALLBACK.PAUSE);\n  }\n\n  /**\n   * resume\n   * Responsible for resuming path animation.\n   * @public\n   */\n  resume() {\n    if (this.config && this.config.paused) {\n      requestAnimationFrame(() => {\n        this.adjustStartTime();\n      });\n      this.config.paused = false;\n      this.emit(CALLBACK.RESUME);\n    }\n  }\n\n  /**\n   * erase\n   * Responsible for clearing path,\n   * paint can still be called on the element after it has been erased.\n   * @public\n   */\n  erase() {\n    // reset / cancel rAF\n    this.config.startTime = null;\n    this.config.elapsedTime = null;\n    cancelAnimationFrame(this.__raf);\n\n    // reset callback\n    this.config.onStrokeCompleteDone = false;\n\n    // reset paused\n    this.config.paused = false;\n\n    // empty contents of svg\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      path.el.style.strokeDashoffset = path.length;\n      path.onStrokeCompleteDone = false;\n      path.onStrokeStartDone = false;\n    }\n\n    this.emit(CALLBACK.ERASE);\n  }\n\n  /**\n   * destroy\n   * Responsible for removing lazyline data and element from DOM\n   * @public\n   */\n  destroy() {\n    // retrieve / remove data object\n    this.config = null;\n\n    // empty container element\n    this.el.remove();\n    this.el = null;\n  }\n\n  set(prop, value) {\n    this._warning(WARNING.DEPRECATED.SET(prop));\n    switch (prop) {\n      case PROP.PROGRESS:\n        this.progress(value);\n        break;\n      case PROP.DELAY:\n        this.delay(value);\n        break;\n      case PROP.REVERSE:\n        this.reverse(value);\n        break;\n      case PROP.EASE:\n        this.ease(value);\n        break;\n      case PROP.REPEAT:\n        this.repeat(value);\n        break;\n      default:\n        this._warning(WARNING.DEPRECATED.SET_PROP);\n    }\n  }\n\n  /**\n   * delay\n   * Responsible for setting playback progress.\n   * @public\n   */\n  progress(val) {\n    if (isNumber(val)) {\n      if (val < 0 || val > 1) {\n        const clamped = clamp(val, 0, 1);\n\n        this._warning(WARNING.PROGRESS_CLAMPED(val, clamped));\n        this._setProgress(clamped);\n      } else {\n        this._setProgress(val);\n      }\n    } else {\n      this._warning(WARNING.PROGRESS(val));\n    }\n\n    return this.config.progress;\n  }\n\n  /**\n   * delay\n   * Responsible for playback delay.\n   * @public\n   */\n  delay(val) {\n    if (isNumber(val)) {\n      this._setDelay(val);\n    } else {\n      this._warning(WARNING.DELAY(val));\n    }\n  }\n\n  /**\n   * reverse\n   * Responsible for reversing animation.\n   * @public\n   */\n  reverse(val) {\n    if (isBoolean(val)) {\n      this._setReverse(val);\n    } else {\n      this._warning(WARNING.REVERSE(val));\n    }\n  }\n\n  /**\n   * ease\n   * Responsible for setting animation ease.\n   * @public\n   */\n  ease(val) {\n    if (isString(val)) {\n      this._setEase(val);\n    } else {\n      this._warning(WARNING.EASE(val));\n    }\n  }\n\n  /**\n   * repeat\n   * Responsible for repeating animation.\n   * @public\n   */\n  repeat(val) {\n    if (isNumber(val)) {\n      this._setRepeat(val);\n    } else {\n      this._warning(WARNING.REPEAT(val));\n    }\n  }\n\n  _setRepeat(repeat) {\n    this.config.repeat = repeat;\n  }\n\n  _setEase(ease) {\n    this.config.ease = ease;\n  }\n\n  _setProgress(progress) {\n    this.pause();\n    this.config.progress = this._getProgress(progress, this.config.ease);\n    this._updatePaths();\n    this.config.elapsedTime = this.config.progress * this.config.totalDuration;\n  }\n\n  _setDelay(delay) {\n    this.config.delay = delay;\n    this._updateDuration();\n  }\n\n  _setReverse(reverse) {\n    this.config.reverse = reverse;\n    this._updateDuration();\n  }\n\n  _updateDuration() {\n    let totalDuration = this._getTotalDuration();\n\n    let longestDuration = this._getLongestDuration();\n\n    this.config.totalDuration = this.config.drawSequential ?\n      totalDuration :\n      longestDuration;\n    this.config.totalDuration += this.config.delay;\n\n    this._calcPathDurations();\n  }\n\n  _calcPathDurations() {\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      let startTime;\n\n      path.progress = 0;\n\n      if (this.config.reverse) {\n        if (this.config.drawSequential) {\n          startTime = 0;\n        } else {\n          startTime = this.config.totalDuration - (path.delay + path.duration);\n        }\n      } else {\n        if (this.config.drawSequential) {\n          startTime = 0;\n        } else {\n          startTime = this.config.delay + path.delay;\n        }\n      }\n\n      path.startTime = startTime;\n      path.startProgress = path.startTime / this.config.totalDuration;\n      path.durationProgress = path.duration / this.config.totalDuration;\n    }\n  }\n\n  /**\n   * get\n   * @public\n   */\n  get() {\n    return this.config;\n  }\n\n  /**\n   * resize\n   * @public\n   */\n  resize() {\n    this.config.offset = this.el.getBoundingClientRect();\n    // this.config.scale = this.config.offset.width / this.config.width;\n\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      path.el.getBoundingClientRect();\n      path.positions = this._getPathPoints(path.el, path.length);\n      this._updatePosition(path);\n    }\n  }\n\n  _parseDataAttrs() {\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      path.id = path.el.dataset.llpId;\n      path.delay = Number(path.el.dataset.llpDelay) || 0;\n      path.duration = Number(path.el.dataset.llpDuration) || 0;\n      path.reverse = Boolean(path.el.dataset.llpReverse) || false;\n      path.ease = Number(path.el.dataset.llpEase) || null;\n      path.strokeDash = path.el.dataset.llpStrokeDash || null;\n      path.delay *= this.config.speedMultiplier;\n      path.duration *= this.config.speedMultiplier;\n\n      this._setStyleAttrs(path);\n    }\n  }\n\n  _setStyleAttrs(path) {\n    path.strokeColor =\n      path.el.dataset.llpStrokeColor || this.config.strokeColor;\n    if (path.strokeColor) {\n      path.el.style.stroke = path.strokeColor;\n    }\n\n    path.strokeOpacity =\n      path.el.dataset.llpStrokeOpacity || this.config.strokeOpacity;\n    if (path.strokeOpacity) {\n      path.el.style.strokeOpacity = path.strokeOpacity;\n    }\n\n    path.strokeWidth =\n      path.el.dataset.llpStrokeWidth || this.config.strokeWidth;\n    if (path.strokeWidth) {\n      path.el.style.strokeWidth = path.strokeWidth;\n    }\n\n    path.strokeCap = path.el.dataset.llpStrokeCap || this.config.strokeCap;\n    if (path.strokeCap) {\n      path.el.style.strokeLinecap = path.strokeCap;\n    }\n\n    path.strokeJoin = path.el.dataset.llpStrokeJoin || this.config.strokeJoin;\n    if (path.strokeJoin) {\n      path.el.style.strokeLinejoin = path.strokeJoin;\n    }\n  }\n\n  _setupPaths() {\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      path.index = i;\n      path.length = this._getPathLength(path.el);\n      path.positions = this._getPathPoints(path.el, path.length);\n\n      path.el.style.strokeDasharray = this._getStrokeDashArray(\n        path,\n        path.length\n      );\n      path.el.style.strokeDashoffset = path.length;\n\n      path.onStrokeStartDone = false;\n      path.onStrokeCompleteDone = false;\n    }\n  }\n\n  /**\n   * adjustStartTime\n   * Responsible for managing time.\n   * @private\n   * @param  {number} timestamp identifies current time\n   * @param  {object} data      contains options set on init() and paint()\n   */\n  adjustStartTime() {\n    let timestamp = performance.now();\n\n    this.config.startTime = timestamp - this.config.elapsedTime;\n    requestAnimationFrame(() => {\n      this._paint();\n    });\n  }\n\n  /**\n   * _paint\n   * Responsible for animating paths.\n   * Path incrementation is performed using requestAnimationFrame.\n   * @private\n   * @param  {number} timestamp   identifies current time\n   * @param  {object} data        contains options set on init() and paint()\n   */\n  _paint = () => {\n    if (!this.config) {\n      return;\n    }\n\n    // set startTime\n    if (!this.config.startTime) {\n      this.config.startTime = performance.now(); // new Date()\n    }\n\n    this.emit(CALLBACK.UPDATE);\n\n    // set elapsedTime\n    let timestamp = performance.now();\n\n    this.config.elapsedTime = timestamp - this.config.startTime;\n    this.config.linearProgress =\n      this.config.elapsedTime / this.config.totalDuration;\n\n    this.config.progress = this._getProgress(\n      this.config.linearProgress,\n      this.config.ease\n    );\n    // console.log(this.config.elapsedTime, ' ', this.config.totalDuration);\n\n    this._updatePaths();\n\n    if (this.config.linearProgress >= 0 && this.config.linearProgress <= 1) {\n      this.__raf = requestAnimationFrame(this._paint);\n    } else {\n      if (this.config.repeat > 0) {\n        this.config.repeat--;\n        this.paint();\n      } else if (this.config.repeat === -1) {\n        this.paint();\n      } else {\n        this.emit(CALLBACK.COMPLETE);\n      }\n    }\n  };\n\n  _updatePaths() {\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      let pathProgress = this._getElapsedProgress(path);\n\n      path.progress = this._getProgress(pathProgress, path.ease);\n      this._setLine(path);\n      this._updatePosition(path);\n      this._updateStrokeCallbacks(path);\n    }\n  }\n\n  _getElapsedProgress(path) {\n    let elapsedProgress;\n\n    if (\n      this.config.progress >= path.startProgress &&\n      this.config.progress <= path.startProgress + path.durationProgress\n    ) {\n      elapsedProgress =\n        (this.config.progress - path.startProgress) / path.durationProgress;\n    } else if (\n      this.config.progress >=\n      path.startProgress + path.durationProgress\n    ) {\n      elapsedProgress = 1;\n    } else if (this.config.progress <= path.startProgress) {\n      elapsedProgress = 0;\n    }\n\n    return elapsedProgress;\n  }\n\n  _getProgress(linearProgress, ease) {\n    let progress = linearProgress;\n\n    if (ease) {\n      progress = Easing[ease](linearProgress);\n    }\n    return progress;\n  }\n\n  _setLine(path) {\n    let el = path.el;\n\n    let length = path.progress * path.length;\n\n    if (path.reverse) {\n      el.style.strokeDashoffset = -path.length + length;\n    } else if (this.config.reverse) {\n      el.style.strokeDashoffset = -path.length + length;\n    } else {\n      el.style.strokeDashoffset = path.length - length;\n    }\n  }\n\n  _updateStrokeCallbacks(path) {\n    if (path.progress === 1) {\n      if (!path.onStrokeCompleteDone) {\n        path.onStrokeCompleteDone = true;\n        this.emit(`${CALLBACK.COMPLETE}:${path.id}`, path);\n        this.emit(`${CALLBACK.COMPLETE}:all`, path);\n      }\n    } else if (path.progress > 0.00001) {\n      if (!path.onStrokeStartDone) {\n        this.emit(`${CALLBACK.START}:${path.id}`, path);\n        this.emit(`${CALLBACK.START}:all`, path);\n        path.onStrokeStartDone = true;\n      }\n\n      this.emit(`${CALLBACK.UPDATE}:${path.id}`, path);\n      this.emit(`${CALLBACK.UPDATE}:all`, path);\n    }\n  }\n\n  /**\n   * _updatePosition\n   * Responsible for updating the paths x / y position.\n   * @private\n   */\n  _updatePosition(path) {\n    let index = Math.round(path.progress * (path.length - 1));\n\n    let position = path.positions[index];\n\n    if (position) {\n      path.position = {\n        x: this.config.offset.left + position.x,\n        y: this.config.offset.top + position.y\n      };\n    }\n  }\n\n  _getTotalDuration() {\n    let totalDuration = 0;\n\n    let paths = this.__paths;\n\n    for (let i = 0; i < paths.length; i++) {\n      let pathDelay = paths[i].delay || 0;\n\n      totalDuration += paths[i].duration + pathDelay;\n    }\n\n    return totalDuration;\n  }\n\n  _getLongestDuration() {\n    let longestDuration = 0;\n\n    let paths = this.__paths;\n\n    for (let i = 0; i < paths.length; i++) {\n      let pathTotalDuration = paths[i].delay + paths[i].duration;\n\n      if (pathTotalDuration > longestDuration) {\n        longestDuration = pathTotalDuration;\n      }\n    }\n\n    return longestDuration;\n  }\n\n  /**\n   * _getPathLength\n   * Responsible for returning a svg path length.\n   * @return {number} path length\n   */\n  _getPathLength(el) {\n    return this._getTotalLength(el); // el.getTotalLength());\n  }\n\n  _getDistance(p1, p2) {\n    return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n  }\n\n  _getCircleLength(el) {\n    return Math.PI * 2 * el.getAttribute(\"r\");\n  }\n\n  _getEllipseLength(el) {\n    let rx = parseInt(el.getAttribute(\"rx\"), 1);\n\n    let ry = parseInt(el.getAttribute(\"ry\"), 1);\n\n    let h = Math.pow(rx - ry, 2) / Math.pow(rx + ry, 2);\n\n    let totalLength =\n      Math.PI * (rx + ry) * (1 + (3 * h) / Math.sqrt(4 - 3 * h));\n\n    return totalLength;\n  }\n\n  _getRectLength(el) {\n    return el.getAttribute(\"width\") * 2 + el.getAttribute(\"height\") * 2;\n  }\n\n  _getLineLength(el) {\n    return this._getDistance(\n      {\n        x: el.getAttribute(\"x1\"),\n        y: el.getAttribute(\"y1\")\n      },\n      {\n        x: el.getAttribute(\"x2\"),\n        y: el.getAttribute(\"y2\")\n      }\n    );\n  }\n\n  _getPolylineLength(el) {\n    const points = el.points;\n\n    let totalLength = 0;\n\n    let previousPos;\n\n    for (let i = 0; i < points.numberOfItems; i++) {\n      const currentPos = points.getItem(i);\n\n      if (i > 0) {\n        totalLength += this._getDistance(previousPos, currentPos);\n      }\n      previousPos = currentPos;\n    }\n    return totalLength;\n  }\n\n  _getPolygonLength(el) {\n    const points = el.points;\n\n    return (\n      this._getPolylineLength(el) +\n      this._getDistance(\n        points.getItem(points.numberOfItems - 1),\n        points.getItem(0)\n      )\n    );\n  }\n\n  _getTotalLength(el) {\n    let length;\n\n    let tagName = el.tagName.toLowerCase();\n\n    switch (tagName) {\n      case \"circle\":\n        length = this._getCircleLength(el);\n        break;\n      case \"rect\":\n        length = this._getRectLength(el);\n        break;\n      case \"line\":\n        length = this._getLineLength(el);\n        break;\n      case \"polyline\":\n        length = this._getPolylineLength(el);\n        break;\n      case \"polygon\":\n        length = this._getPolygonLength(el);\n        break;\n      default:\n        length = el.getTotalLength();\n    }\n\n    return length;\n  }\n\n  /**\n   * _getPathPoints\n   * Responsible for returning a svg path coords.\n   * @return {array} path coords\n   */\n  _getPathPoints(el, length) {\n    let arr = [];\n\n    for (let i = 0; i < length; i++) {\n      let position = el.getPointAtLength(i);\n\n      arr.push({\n        x: position.x,\n        y: position.y\n      });\n    }\n    return arr;\n  }\n\n  /**\n   * _getStrokeDashArray\n   * @private\n   */\n  _getStrokeDashArray(path, length) {\n    let strokeDash;\n\n    if (path.strokeDash) {\n      strokeDash = this._getStrokeDashString(path.strokeDash, length);\n    } else if (this.config.strokeDash) {\n      strokeDash = this._getStrokeDashString(this.config.strokeDash, length);\n    } else {\n      strokeDash = length + \" \" + length;\n    }\n    return strokeDash;\n  }\n\n  /**\n   * _getStrokeDashString\n   * @private\n   */\n  _getStrokeDashString(dashArray, length) {\n    let strokeDashString = \"\";\n\n    let strokeDashArray = dashArray.split(\",\");\n\n    let strokeDashTotal = 0;\n\n    let strokeDashNum;\n\n    let strokeDashRemainder;\n\n    for (let i = strokeDashArray.length - 1; i >= 0; i--) {\n      strokeDashTotal += Number(strokeDashArray[i]);\n    }\n    strokeDashNum = Math.floor(length / strokeDashTotal);\n    strokeDashRemainder = length - strokeDashNum * strokeDashTotal;\n    for (let i = 0; i < strokeDashNum; i++) {\n      strokeDashString += dashArray + \", \";\n    }\n    let preArray = strokeDashString + strokeDashRemainder + \", \" + (length + 2);\n\n    return preArray.split(\",\").join(\"px,\") + \"px\";\n  }\n\n  _onVisibilityChange = () => {\n    if (document.hidden) {\n      this.pause();\n    } else {\n      this.resume();\n    }\n  };\n}\n\nconst win = window || {};\n\nwin.LazyLinePainter = LazyLinePainter;\nexport default LazyLinePainter;\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","EventEmitter","name","callback","this","_eventEmitterCallbacks","push","addListener","on","off","i","indexOf","splice","removeListener","emit","evt","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","trigger","easeLinear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","Math","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInBounce","easeOutBounce","easeInOutBounce","isNumber","val","PROJECT_NAME","CALLBACK","WARNING","concat","LazyLinePainter","el","config","_this","_classCallCheck","_defineProperty","startTime","performance","now","timestamp","elapsedTime","linearProgress","totalDuration","progress","_getProgress","ease","_updatePaths","__raf","requestAnimationFrame","_paint","repeat","paint","document","hidden","pause","resume","classList","add","assign","strokeWidth","strokeDash","strokeColor","strokeOverColor","strokeCap","strokeJoin","strokeOpacity","delay","drawSequential","speedMultiplier","reverse","paused","longestDuration","log","offset","getBoundingClientRect","Events","__paths","_generatePaths","_parseDataAttrs","_updateDuration","_setupPaths","addEventListener","_onVisibilityChange","paths","Boolean","dataset","llpComposed","querySelectorAll","_uncomposed","length","path","id","replace","llpId","llpDuration","llpDelay","_warning","message","console","warn","erase","cancelAnimationFrame","_this2","adjustStartTime","onStrokeCompleteDone","style","strokeDashoffset","onStrokeStartDone","remove","clamped","num","min","arguments","undefined","max","clamp","_setProgress","_setDelay","isBoolean","_setReverse","isString","_setEase","_setRepeat","_getTotalDuration","_getLongestDuration","_calcPathDurations","duration","startProgress","durationProgress","positions","_getPathPoints","_updatePosition","Number","llpReverse","llpEase","llpStrokeDash","_setStyleAttrs","llpStrokeColor","stroke","llpStrokeOpacity","llpStrokeWidth","llpStrokeCap","strokeLinecap","llpStrokeJoin","strokeLinejoin","index","_getPathLength","strokeDasharray","_getStrokeDashArray","_this3","pathProgress","_getElapsedProgress","_setLine","_updateStrokeCallbacks","elapsedProgress","Easing","round","position","x","left","y","top","pathDelay","pathTotalDuration","_getTotalLength","p1","p2","getAttribute","rx","parseInt","ry","h","_getDistance","previousPos","points","totalLength","numberOfItems","currentPos","getItem","_getPolylineLength","tagName","toLowerCase","_getCircleLength","_getRectLength","_getLineLength","_getPolygonLength","getTotalLength","arr","getPointAtLength","_getStrokeDashString","dashArray","strokeDashNum","strokeDashRemainder","strokeDashString","strokeDashArray","split","strokeDashTotal","floor","join","window"],"sourceRoot":""}