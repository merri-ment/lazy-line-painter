{"version":3,"file":"lazy-line-painter-2.0.0.js","mappings":"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","sources":["webpack://lazy-line-painter/webpack/universalModuleDefinition","webpack://lazy-line-painter/./src/easing.js","webpack://lazy-line-painter/./src/events.js","webpack://lazy-line-painter/webpack/bootstrap","webpack://lazy-line-painter/webpack/runtime/define property getters","webpack://lazy-line-painter/webpack/runtime/hasOwnProperty shorthand","webpack://lazy-line-painter/webpack/runtime/make namespace object","webpack://lazy-line-painter/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lazy-line-painter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lazy-line-painter\"] = factory();\n\telse\n\t\troot[\"lazy-line-painter\"] = factory();\n})(self, () => {\nreturn ","\nlet Easing = {\n\n  easeLinear(n) {\n    return n;\n  },\n\n  easeInQuad(n) {\n    return n * n;\n  },\n\n  easeOutQuad(n) {\n    return n * (2 - n);\n  },\n\n  easeInOutQuad(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n;\n    return -0.5 * (--n * (n - 2) - 1);\n  },\n\n  easeInCubic(n) {\n    return n * n * n;\n  },\n\n  easeOutCubic(n) {\n    return --n * n * n + 1;\n  },\n\n  easeInOutCubic(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n * n;\n    return 0.5 * ((n -= 2) * n * n + 2);\n  },\n\n  easeInQuart(n) {\n    return n * n * n * n;\n  },\n\n  easeOutQuart(n) {\n    return 1 - --n * n * n * n;\n  },\n\n  easeInOutQuart(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n * n * n;\n    return -0.5 * ((n -= 2) * n * n * n - 2);\n  },\n\n  easeInQuint(n) {\n    return n * n * n * n * n;\n  },\n\n  easeOutQuint(n) {\n    return --n * n * n * n * n + 1;\n  },\n\n  easeInOutQuint(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n * n * n * n;\n    return 0.5 * ((n -= 2) * n * n * n * n + 2);\n  },\n\n  easeInSine(n) {\n    return 1 - Math.cos(n * Math.PI / 2);\n  },\n\n  easeOutSine(n) {\n    return Math.sin(n * Math.PI / 2);\n  },\n\n  easeInOutSine(n) {\n    return 0.5 * (1 - Math.cos(Math.PI * n));\n  },\n\n  easeInExpo(n) {\n    return n === 0 ? 0 : Math.pow(1024, n - 1);\n  },\n\n  easeOutExpo(n) {\n    return n === 1 ? n : 1 - Math.pow(2, -10 * n);\n  },\n\n  easeInOutExpo(n) {\n    if (n === 0) return 0;\n    if (n === 1) return 1;\n    if ((n *= 2) < 1) return 0.5 * Math.pow(1024, n - 1);\n    return 0.5 * (-Math.pow(2, -10 * (n - 1)) + 2);\n  },\n\n  easeInCirc(n) {\n    return 1 - Math.sqrt(1 - n * n);\n  },\n\n  easeOutCirc(n) {\n    return Math.sqrt(1 - --n * n);\n  },\n\n  easeInOutCirc(n) {\n    n *= 2;\n    if (n < 1) return -0.5 * (Math.sqrt(1 - n * n) - 1);\n    return 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1);\n  },\n\n  easeInBounce(n) {\n    return 1 - this.easeOutBounce(1 - n);\n  },\n\n  easeOutBounce(n) {\n    if (n < 1 / 2.75) {\n      return 7.5625 * n * n;\n    } else if (n < 2 / 2.75) {\n      return 7.5625 * (n -= 1.5 / 2.75) * n + 0.75;\n    } else if (n < 2.5 / 2.75) {\n      return 7.5625 * (n -= 2.25 / 2.75) * n + 0.9375;\n    }\n    return 7.5625 * (n -= 2.625 / 2.75) * n + 0.984375;\n\n  },\n\n  easeInOutBounce(n) {\n    if (n < 0.5) return this.easeInBounce(n * 2) * 0.5;\n    return this.easeOutBounce(n * 2 - 1) * 0.5 + 0.5;\n  }\n};\n\nexport default Easing;\n\n","let EventEmitter = {};\n\nEventEmitter.on = function (name, callback) {\n  this._eventEmitterCallbacks = this._eventEmitterCallbacks || {};\n  this._eventEmitterCallbacks[name] = this._eventEmitterCallbacks[name] || [];\n  this._eventEmitterCallbacks[name].push(callback);\n};\nEventEmitter.addListener = EventEmitter.on;\n\nEventEmitter.off = function (name, callback) {\n  this._eventEmitterCallbacks = this._eventEmitterCallbacks || {};\n  if (!(name in this._eventEmitterCallbacks)) return;\n  const i = this._eventEmitterCallbacks[name].indexOf(callback);\n\n  if (i < 0) return;\n  this._eventEmitterCallbacks[name].splice(i, 1);\n};\nEventEmitter.removeListener = EventEmitter.off;\n\nEventEmitter.emit = function (name, evt) {\n  this._eventEmitterCallbacks = this._eventEmitterCallbacks || {};\n  if (!(name in this._eventEmitterCallbacks)) return;\n  for (let callback of this._eventEmitterCallbacks[name]) {\n    if (typeof callback !== 'function') return;\n    callback(evt);\n  }\n};\nEventEmitter.trigger = EventEmitter.emit;\n\nexport default EventEmitter;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\n * Lazy Line Painter\n * SVG Stroke animation.\n *\n * https://github.com/merri-ment/lazy-line-painter\n * http://www.merriment.info\n *\n * Copyright 2013-2023 Merriment\n * All rights reserved.\n *\n * Licensed under the MIT license.\n *\n */\n\nimport Events from \"./events\";\nimport Easing from \"./easing\";\n\nclass LazyLinePainter {\n  /**\n   * init\n   * Responsible for caching user options,\n   * @public\n   * @param  {object} opts user defined options\n   */\n\n  constructor(el, config) {\n    this.el = el;\n    this.el.classList.add(\"lazy-line-painter\");\n\n    this.config = Object.assign(\n      {\n        strokeWidth: null,\n        strokeDash: null,\n        strokeColor: null,\n        strokeOverColor: null,\n        strokeCap: null,\n        strokeJoin: null,\n        strokeOpacity: null,\n\n        delay: 0,\n        ease: null,\n        drawSequential: false,\n        speedMultiplier: 1,\n        reverse: false,\n        paused: false,\n        progress: 0,\n        repeat: 0,\n\n        longestDuration: 0,\n        log: true,\n        offset: this.el.getBoundingClientRect(),\n      },\n      config,\n      {}\n    );\n\n    Object.assign(this, Events, {});\n\n    this.__raf = null;\n    this.__paths = [];\n\n    this._generatePaths();\n    this._parseDataAttrs();\n    this._updateDuration();\n    this._setupPaths();\n\n    document.addEventListener(\"visibilitychange\", this._onVisibilityChange);\n  }\n\n  _generatePaths() {\n    let paths;\n\n    let composed = Boolean(this.el.dataset.llpComposed);\n\n    if (composed) {\n      paths = this.el.querySelectorAll(\"[data-llp-id]\");\n    } else {\n      paths = this._uncomposed();\n    }\n\n    for (let i = 0; i < paths.length; i++) {\n      let path = {\n        el: paths[i],\n      };\n\n      this.__paths.push(path);\n    }\n  }\n\n  _uncomposed() {\n    let paths = this.el.querySelectorAll(\n      \"path, polygon, circle, ellipse, polyline, line, rect\"\n    );\n\n    let i;\n\n    for (i = 0; i < paths.length; i++) {\n      let id = this.el.id.replace(/ /g, \"\");\n\n      id = id.replace(\".\", \"\");\n      id = id.replace(\"-\", \"\");\n      paths[i].dataset.llpId = id + \"-\" + i;\n\n      if (!paths[i].dataset.llpDuration) {\n        paths[i].dataset.llpDuration = 1000;\n      }\n      if (!paths[i].dataset.llpDuration) {\n        paths[i].dataset.llpDelay = 0;\n      }\n    }\n\n    if (this.config.log) {\n      console.log(\n        `This lazy line is uncomposed! Visit https://lazylinepainter.com to compose your masterpiece!`\n      );\n    }\n\n    return paths;\n  }\n\n  /**\n   * paint\n   * Responsible for drawing path.\n   * @public\n   */\n\n  paint(config) {\n    // update playback arguments\n    Object.assign(this.config, config);\n    this._updateDuration();\n\n    this.erase();\n\n    // begin animation\n    this._paint();\n\n    // fire start callback\n    this.emit(\"start\");\n  }\n\n  /**\n   * pause\n   * Responsible for pausing path animation.\n   * @public\n   */\n  pause() {\n    if (this.config) {\n      this.config.paused = true;\n    }\n    cancelAnimationFrame(this.__raf);\n    this.emit(\"pause\");\n  }\n\n  /**\n   * resume\n   * Responsible for resuming path animation.\n   * @public\n   */\n  resume() {\n    if (this.config && this.config.paused) {\n      requestAnimationFrame(() => {\n        this.adjustStartTime();\n      });\n      this.config.paused = false;\n      this.emit(\"resume\");\n    }\n  }\n\n  /**\n   * erase\n   * Responsible for clearing path,\n   * paint can still be called on the element after it has been erased.\n   * @public\n   */\n  erase() {\n    // reset / cancel rAF\n    this.config.startTime = null;\n    this.config.elapsedTime = null;\n    cancelAnimationFrame(this.__raf);\n\n    // reset callback\n    this.config.onStrokeCompleteDone = false;\n\n    // reset paused\n    this.config.paused = false;\n\n    // empty contents of svg\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      path.el.style.strokeDashoffset = path.length;\n      path.onStrokeCompleteDone = false;\n      path.onStrokeStartDone = false;\n    }\n\n    this.emit(\"erase\");\n  }\n\n  /**\n   * destroy\n   * Responsible for removing lazyline data and element from DOM\n   * @public\n   */\n  destroy() {\n    // retrieve / remove data object\n    this.config = null;\n\n    // empty container element\n    this.el.remove();\n    this.el = null;\n  }\n\n  /**\n   * set\n   * @public\n   */\n  set(prop, value) {\n    switch (prop) {\n      case \"progress\":\n        this._setProgress(value);\n        break;\n      case \"delay\":\n        this._setDelay(value);\n        break;\n      case \"reverse\":\n        this._setReverse(value);\n        break;\n      case \"ease\":\n        this._setEase(value);\n        break;\n      case \"repeat\":\n        this._setRepeat(value);\n        break;\n      default:\n        if (this.config.log) {\n          console.log(\"property \" + prop + \" can not be set\");\n        }\n    }\n  }\n\n  _setRepeat(repeat) {\n    this.config.repeat = repeat;\n  }\n\n  _setEase(ease) {\n    this.config.ease = ease;\n  }\n\n  _setProgress(progress) {\n    this.pause();\n    this.config.progress = this._getProgress(progress, this.config.ease);\n    this._updatePaths();\n    this.config.elapsedTime = this.config.progress * this.config.totalDuration;\n  }\n\n  _setDelay(delay) {\n    this.config.delay = delay;\n    this._updateDuration();\n  }\n\n  _setReverse(reverse) {\n    this.config.reverse = reverse;\n    this._updateDuration();\n  }\n\n  _updateDuration() {\n    let totalDuration = this._getTotalDuration();\n\n    let longestDuration = this._getLongestDuration();\n\n    this.config.totalDuration = this.config.drawSequential\n      ? totalDuration\n      : longestDuration;\n    this.config.totalDuration += this.config.delay;\n\n    this._calcPathDurations();\n  }\n\n  _calcPathDurations() {\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      let startTime;\n\n      path.progress = 0;\n\n      if (this.config.reverse) {\n        if (this.config.drawSequential) {\n          startTime = 0;\n        } else {\n          startTime = this.config.totalDuration - (path.delay + path.duration);\n        }\n      } else {\n        if (this.config.drawSequential) {\n          startTime = 0;\n        } else {\n          startTime = this.config.delay + path.delay;\n        }\n      }\n\n      path.startTime = startTime;\n      path.startProgress = path.startTime / this.config.totalDuration;\n      path.durationProgress = path.duration / this.config.totalDuration;\n    }\n  }\n\n  /**\n   * get\n   * @public\n   */\n  get() {\n    return this.config;\n  }\n\n  /**\n   * resize\n   * @public\n   */\n  resize() {\n    this.config.offset = this.el.getBoundingClientRect();\n    // this.config.scale = this.config.offset.width / this.config.width;\n\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      path.el.getBoundingClientRect();\n      path.positions = this._getPathPoints(path.el, path.length);\n      this._updatePosition(path);\n    }\n  }\n\n  _parseDataAttrs() {\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      path.id = path.el.dataset.llpId;\n      path.delay = Number(path.el.dataset.llpDelay) || 0;\n      path.duration = Number(path.el.dataset.llpDuration) || 0;\n      path.reverse = Boolean(path.el.dataset.llpReverse) || false;\n      path.ease = Number(path.el.dataset.llpEase) || null;\n      path.strokeDash = path.el.dataset.llpStrokeDash || null;\n      path.delay *= this.config.speedMultiplier;\n      path.duration *= this.config.speedMultiplier;\n\n      this._setStyleAttrs(path);\n    }\n  }\n\n  _setStyleAttrs(path) {\n    path.strokeColor =\n      path.el.dataset.llpStrokeColor || this.config.strokeColor;\n    if (path.strokeColor) {\n      path.el.style.stroke = path.strokeColor;\n    }\n\n    path.strokeOpacity =\n      path.el.dataset.llpStrokeOpacity || this.config.strokeOpacity;\n    if (path.strokeOpacity) {\n      path.el.style.strokeOpacity = path.strokeOpacity;\n    }\n\n    path.strokeWidth =\n      path.el.dataset.llpStrokeWidth || this.config.strokeWidth;\n    if (path.strokeWidth) {\n      path.el.style.strokeWidth = path.strokeWidth;\n    }\n\n    path.strokeCap = path.el.dataset.llpStrokeCap || this.config.strokeCap;\n    if (path.strokeCap) {\n      path.el.style.strokeLinecap = path.strokeCap;\n    }\n\n    path.strokeJoin = path.el.dataset.llpStrokeJoin || this.config.strokeJoin;\n    if (path.strokeJoin) {\n      path.el.style.strokeLinejoin = path.strokeJoin;\n    }\n  }\n\n  _setupPaths() {\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      path.index = i;\n      path.length = this._getPathLength(path.el);\n      path.positions = this._getPathPoints(path.el, path.length);\n\n      path.el.style.strokeDasharray = this._getStrokeDashArray(\n        path,\n        path.length\n      );\n      path.el.style.strokeDashoffset = path.length;\n\n      path.onStrokeStartDone = false;\n      path.onStrokeCompleteDone = false;\n    }\n  }\n\n  /**\n   * adjustStartTime\n   * Responsible for managing time.\n   * @private\n   * @param  {number} timestamp identifies current time\n   * @param  {object} data      contains options set on init() and paint()\n   */\n  adjustStartTime() {\n    let timestamp = performance.now();\n\n    this.config.startTime = timestamp - this.config.elapsedTime;\n    requestAnimationFrame(() => {\n      this._paint();\n    });\n  }\n\n  /**\n   * _paint\n   * Responsible for animating paths.\n   * Path incrementation is performed using requestAnimationFrame.\n   * @private\n   * @param  {number} timestamp   identifies current time\n   * @param  {object} data        contains options set on init() and paint()\n   */\n  _paint() {\n    if (!this.config) {\n      return;\n    }\n\n    // set startTime\n    if (!this.config.startTime) {\n      this.config.startTime = performance.now(); // new Date()\n    }\n\n    this.emit(\"update\");\n\n    // set elapsedTime\n    let timestamp = performance.now();\n\n    this.config.elapsedTime = timestamp - this.config.startTime;\n    this.config.linearProgress =\n      this.config.elapsedTime / this.config.totalDuration;\n\n    this.config.progress = this._getProgress(\n      this.config.linearProgress,\n      this.config.ease\n    );\n    // console.log(this.config.elapsedTime, ' ', this.config.totalDuration);\n\n    this._updatePaths();\n\n    if (this.config.linearProgress >= 0 && this.config.linearProgress <= 1) {\n      this.__raf = requestAnimationFrame(() => {\n        this._paint();\n      });\n    } else {\n      if (this.config.repeat > 0) {\n        this.config.repeat--;\n        this.paint();\n      } else if (this.config.repeat === -1) {\n        this.paint();\n      } else {\n        this.emit(\"complete\");\n      }\n    }\n  }\n\n  _updatePaths() {\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      let pathProgress = this._getElapsedProgress(path);\n\n      path.progress = this._getProgress(pathProgress, path.ease);\n      this._setLine(path);\n      this._updatePosition(path);\n      this._updateStrokeCallbacks(path);\n    }\n  }\n\n  _getElapsedProgress(path) {\n    let elapsedProgress;\n\n    if (\n      this.config.progress >= path.startProgress &&\n      this.config.progress <= path.startProgress + path.durationProgress\n    ) {\n      elapsedProgress =\n        (this.config.progress - path.startProgress) / path.durationProgress;\n    } else if (\n      this.config.progress >=\n      path.startProgress + path.durationProgress\n    ) {\n      elapsedProgress = 1;\n    } else if (this.config.progress <= path.startProgress) {\n      elapsedProgress = 0;\n    }\n\n    return elapsedProgress;\n  }\n\n  _getProgress(linearProgress, ease) {\n    let progress = linearProgress;\n\n    if (ease) {\n      progress = Easing[ease](linearProgress);\n    }\n    return progress;\n  }\n\n  _setLine(path) {\n    let el = path.el;\n\n    let length = path.progress * path.length;\n\n    if (path.reverse) {\n      el.style.strokeDashoffset = -path.length + length;\n    } else if (this.config.reverse) {\n      el.style.strokeDashoffset = -path.length + length;\n    } else {\n      el.style.strokeDashoffset = path.length - length;\n    }\n  }\n\n  _updateStrokeCallbacks(path) {\n    if (path.progress === 1) {\n      if (!path.onStrokeCompleteDone) {\n        path.onStrokeCompleteDone = true;\n\n        this.emit(\"complete:\" + path.id, path);\n        this.emit(\"complete:all\", path);\n      }\n    } else if (path.progress > 0.00001) {\n      if (!path.onStrokeStartDone) {\n        this.emit(\"start:\" + path.id, path);\n        this.emit(\"start:all\", path);\n        path.onStrokeStartDone = true;\n      }\n\n      this.emit(\"update:\" + path.id, path);\n      this.emit(\"update:all\", path);\n    }\n  }\n\n  /**\n   * _updatePosition\n   * Responsible for updating the paths x / y position.\n   * @private\n   */\n  _updatePosition(path) {\n    let index = Math.round(path.progress * (path.length - 1));\n\n    let position = path.positions[index];\n\n    if (position) {\n      path.position = {\n        x: this.config.offset.left + position.x,\n        y: this.config.offset.top + position.y,\n      };\n    }\n  }\n\n  _getTotalDuration() {\n    let totalDuration = 0;\n\n    let paths = this.__paths;\n\n    for (let i = 0; i < paths.length; i++) {\n      let pathDelay = paths[i].delay || 0;\n\n      totalDuration += paths[i].duration + pathDelay;\n    }\n\n    return totalDuration;\n  }\n\n  _getLongestDuration() {\n    let longestDuration = 0;\n\n    let paths = this.__paths;\n\n    for (let i = 0; i < paths.length; i++) {\n      let pathTotalDuration = paths[i].delay + paths[i].duration;\n\n      if (pathTotalDuration > longestDuration) {\n        longestDuration = pathTotalDuration;\n      }\n    }\n\n    return longestDuration;\n  }\n\n  /**\n   * _getPathLength\n   * Responsible for returning a svg path length.\n   * @return {number} path length\n   */\n  _getPathLength(el) {\n    return this._getTotalLength(el); // el.getTotalLength());\n  }\n\n  _getDistance(p1, p2) {\n    return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n  }\n\n  _getCircleLength(el) {\n    return Math.PI * 2 * el.getAttribute(\"r\");\n  }\n\n  _getEllipseLength(el) {\n    let rx = parseInt(el.getAttribute(\"rx\"), 1);\n\n    let ry = parseInt(el.getAttribute(\"ry\"), 1);\n\n    let h = Math.pow(rx - ry, 2) / Math.pow(rx + ry, 2);\n\n    let totalLength =\n      Math.PI * (rx + ry) * (1 + (3 * h) / Math.sqrt(4 - 3 * h));\n\n    return totalLength;\n  }\n\n  _getRectLength(el) {\n    return el.getAttribute(\"width\") * 2 + el.getAttribute(\"height\") * 2;\n  }\n\n  _getLineLength(el) {\n    return this._getDistance(\n      {\n        x: el.getAttribute(\"x1\"),\n        y: el.getAttribute(\"y1\"),\n      },\n      {\n        x: el.getAttribute(\"x2\"),\n        y: el.getAttribute(\"y2\"),\n      }\n    );\n  }\n\n  _getPolylineLength(el) {\n    const points = el.points;\n\n    let totalLength = 0;\n\n    let previousPos;\n\n    for (let i = 0; i < points.numberOfItems; i++) {\n      const currentPos = points.getItem(i);\n\n      if (i > 0) {\n        totalLength += this._getDistance(previousPos, currentPos);\n      }\n      previousPos = currentPos;\n    }\n    return totalLength;\n  }\n\n  _getPolygonLength(el) {\n    const points = el.points;\n\n    return (\n      this._getPolylineLength(el) +\n      this._getDistance(\n        points.getItem(points.numberOfItems - 1),\n        points.getItem(0)\n      )\n    );\n  }\n\n  _getTotalLength(el) {\n    let length;\n\n    let tagName = el.tagName.toLowerCase();\n\n    switch (tagName) {\n      case \"circle\":\n        length = this._getCircleLength(el);\n        break;\n      case \"rect\":\n        length = this._getRectLength(el);\n        break;\n      case \"line\":\n        length = this._getLineLength(el);\n        break;\n      case \"polyline\":\n        length = this._getPolylineLength(el);\n        break;\n      case \"polygon\":\n        length = this._getPolygonLength(el);\n        break;\n      default:\n        length = el.getTotalLength();\n    }\n\n    return length;\n  }\n\n  /**\n   * _getPathPoints\n   * Responsible for returning a svg path coords.\n   * @return {array} path coords\n   */\n  _getPathPoints(el, length) {\n    let arr = [];\n\n    for (let i = 0; i < length; i++) {\n      let position = el.getPointAtLength(i);\n\n      arr.push({\n        x: position.x,\n        y: position.y,\n      });\n    }\n    return arr;\n  }\n\n  /**\n   * _getStrokeDashArray\n   * @private\n   */\n  _getStrokeDashArray(path, length) {\n    let strokeDash;\n\n    if (path.strokeDash) {\n      strokeDash = this._getStrokeDashString(path.strokeDash, length);\n    } else if (this.config.strokeDash) {\n      strokeDash = this._getStrokeDashString(this.config.strokeDash, length);\n    } else {\n      strokeDash = length + \" \" + length;\n    }\n    return strokeDash;\n  }\n\n  /**\n   * _getStrokeDashString\n   * @private\n   */\n  _getStrokeDashString(dashArray, length) {\n    let strokeDashString = \"\";\n\n    let strokeDashArray = dashArray.split(\",\");\n\n    let strokeDashTotal = 0;\n\n    let strokeDashNum;\n\n    let strokeDashRemainder;\n\n    for (let i = strokeDashArray.length - 1; i >= 0; i--) {\n      strokeDashTotal += Number(strokeDashArray[i]);\n    }\n    strokeDashNum = Math.floor(length / strokeDashTotal);\n    strokeDashRemainder = length - strokeDashNum * strokeDashTotal;\n    for (let i = 0; i < strokeDashNum; i++) {\n      strokeDashString += dashArray + \", \";\n    }\n    let preArray = strokeDashString + strokeDashRemainder + \", \" + (length + 2);\n\n    return preArray.split(\",\").join(\"px,\") + \"px\";\n  }\n\n  _onVisibilityChange = () => {\n    if (document.hidden) {\n      this.pause();\n    } else {\n      this.resume();\n    }\n  };\n}\n\nconst win = window || {};\n\nwin.LazyLinePainter = LazyLinePainter;\nexport default LazyLinePainter;\n"],"names":["Easing","easeLinear","n","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","Math","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInBounce","easeOutBounce","easeInOutBounce","EventEmitter","on","name","callback","_eventEmitterCallbacks","push","addListener","off","i","indexOf","splice","removeListener","emit","evt","_iterator","_createForOfIteratorHelper","_step","s","done","value","err","e","f","trigger","Events","LazyLinePainter","el","config","_this","_classCallCheck","_defineProperty","document","hidden","pause","resume","classList","add","Object","assign","strokeWidth","strokeDash","strokeColor","strokeOverColor","strokeCap","strokeJoin","strokeOpacity","delay","ease","drawSequential","speedMultiplier","reverse","paused","progress","repeat","longestDuration","log","offset","getBoundingClientRect","__raf","__paths","_generatePaths","_parseDataAttrs","_updateDuration","_setupPaths","addEventListener","_onVisibilityChange","_createClass","key","paths","composed","Boolean","dataset","llpComposed","querySelectorAll","_uncomposed","length","path","id","replace","llpId","llpDuration","llpDelay","console","paint","erase","_paint","cancelAnimationFrame","_this2","requestAnimationFrame","adjustStartTime","startTime","elapsedTime","onStrokeCompleteDone","style","strokeDashoffset","onStrokeStartDone","destroy","remove","set","prop","_setProgress","_setDelay","_setReverse","_setEase","_setRepeat","_getProgress","_updatePaths","totalDuration","_getTotalDuration","_getLongestDuration","_calcPathDurations","duration","startProgress","durationProgress","get","resize","positions","_getPathPoints","_updatePosition","Number","llpReverse","llpEase","llpStrokeDash","_setStyleAttrs","llpStrokeColor","stroke","llpStrokeOpacity","llpStrokeWidth","llpStrokeCap","strokeLinecap","llpStrokeJoin","strokeLinejoin","index","_getPathLength","strokeDasharray","_getStrokeDashArray","_this3","timestamp","performance","now","_this4","linearProgress","pathProgress","_getElapsedProgress","_setLine","_updateStrokeCallbacks","elapsedProgress","round","position","x","left","y","top","pathDelay","pathTotalDuration","_getTotalLength","_getDistance","p1","p2","_getCircleLength","getAttribute","_getEllipseLength","rx","parseInt","ry","h","totalLength","_getRectLength","_getLineLength","_getPolylineLength","points","previousPos","numberOfItems","currentPos","getItem","_getPolygonLength","tagName","toLowerCase","getTotalLength","arr","getPointAtLength","_getStrokeDashString","dashArray","strokeDashString","strokeDashArray","split","strokeDashTotal","strokeDashNum","strokeDashRemainder","floor","preArray","join","win","window"],"sourceRoot":""}